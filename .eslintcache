[{"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\index.js":"1","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\serviceWorker.js":"2","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\App.js":"3","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\Index.js":"4","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Navbars.js":"5","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Pagination.js":"6","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Tabs.js":"7","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\JavaScript.js":"8","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Signup.js":"9","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Basics.js":"10","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Typography.js":"11","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Notifications.js":"12","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Download.js":"13","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Examples.js":"14","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\NucleoIcons.js":"15","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\PageHeader\\PageHeader.js":"16","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\Footer\\Footer.js":"17","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\Navbars\\IndexNavbar.js":"18","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\RegisterPage.js":"19","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\ProfilePage.js":"20","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\LandingPage.js":"21","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\variables\\charts.js":"22","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\Navbars\\ExamplesNavbar.js":"23","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\utils\\ipfs.js":"24","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\AdminPage.js":"25","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\utils\\histroy.js":"26","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\Doctor\\AddDoctor.js":"27","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\Doctor\\SearchDoctor.js":"28","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\Doctor\\DoctorInfo.js":"29","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\patient\\AddPatient.js":"30","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\patient\\SearchPatient.js":"31","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\patient\\PatientInfo.js":"32"},{"size":2804,"mtime":1639450319351,"results":"33","hashOfConfig":"34"},{"size":4951,"mtime":1562856774000,"results":"35","hashOfConfig":"34"},{"size":3929,"mtime":1638859215863,"results":"36","hashOfConfig":"34"},{"size":22606,"mtime":1639053423403,"results":"37","hashOfConfig":"34"},{"size":16896,"mtime":1638860643896,"results":"38","hashOfConfig":"34"},{"size":6621,"mtime":1638860682300,"results":"39","hashOfConfig":"34"},{"size":7796,"mtime":1638773912784,"results":"40","hashOfConfig":"34"},{"size":15069,"mtime":1638860469266,"results":"41","hashOfConfig":"34"},{"size":5025,"mtime":1638860709496,"results":"42","hashOfConfig":"34"},{"size":9177,"mtime":1638860547692,"results":"43","hashOfConfig":"34"},{"size":7157,"mtime":1638860575770,"results":"44","hashOfConfig":"34"},{"size":1898,"mtime":1638773913023,"results":"45","hashOfConfig":"34"},{"size":3141,"mtime":1638860609603,"results":"46","hashOfConfig":"34"},{"size":1534,"mtime":1638860525917,"results":"47","hashOfConfig":"34"},{"size":3047,"mtime":1638860664494,"results":"48","hashOfConfig":"34"},{"size":833,"mtime":1638773661025,"results":"49","hashOfConfig":"34"},{"size":3280,"mtime":1638874241291,"results":"50","hashOfConfig":"34"},{"size":6340,"mtime":1639451889300,"results":"51","hashOfConfig":"34"},{"size":7297,"mtime":1638873387515,"results":"52","hashOfConfig":"34"},{"size":9159,"mtime":1638947031500,"results":"53","hashOfConfig":"34"},{"size":20702,"mtime":1638872133348,"results":"54","hashOfConfig":"34"},{"size":2323,"mtime":1638773778209,"results":"55","hashOfConfig":"34"},{"size":5206,"mtime":1638773660986,"results":"56","hashOfConfig":"34"},{"size":147,"mtime":1638875895970,"results":"57","hashOfConfig":"34"},{"size":10978,"mtime":1639454501052,"results":"58","hashOfConfig":"34"},{"size":86,"mtime":1638948697250,"results":"59","hashOfConfig":"34"},{"size":16935,"mtime":1639454549004,"results":"60","hashOfConfig":"34"},{"size":6898,"mtime":1639454704869,"results":"61","hashOfConfig":"34"},{"size":19929,"mtime":1639450319755,"results":"62","hashOfConfig":"34"},{"size":14334,"mtime":1639454786466,"results":"63","hashOfConfig":"34"},{"size":6880,"mtime":1639450636429,"results":"64","hashOfConfig":"34"},{"size":16561,"mtime":1639451592878,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},"1ra7yx8",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\index.js",["145"],"// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.css'\n\n// import * as serviceWorker from './serviceWorker';\n//\n// ReactDOM.render(<App />, document.getElementById('root'));\n//\n// serviceWorker.unregister();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"./assets/css/nucleo-icons.css\";\nimport \"./assets/scss/blk-design-system-react.scss?v=1.2.0\";\nimport \"./assets/demo/demo.css\";\n\n// import Index from \"views/Index.js\";\nimport App from './views/Index';\nimport LandingPage from \"./views/examples/LandingPage\";\nimport RegisterPage from \"./views/examples/RegisterPage\";\nimport ProfilePage from \"./views/examples/ProfilePage\";\nimport AdminPage from \"./views/examples/AdminPage\";\nimport AddDoctor from \"./views/examples/Doctor/AddDoctor\";\nimport SearchDoctor from \"./views/examples/Doctor/SearchDoctor\";\nimport DoctorInfo from \"./views/examples/Doctor/DoctorInfo\";\nimport AddPatient from './views/examples/patient/AddPatient';\nimport SearchPatient from './views/examples/patient/SearchPatient';\nimport PatientInfo from './views/examples/patient/PatientInfo';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/index\" render={(props) => <App {...props} />} />\n            {/*<Route*/}\n            {/*    path=\"/landing-page\"*/}\n            {/*    render={(props) => <LandingPage {...props} />}*/}\n            {/*/>*/}\n            <Route\n                path=\"/register-page\"\n                render={(props) => <RegisterPage {...props} />}\n            />\n            <Route\n                path=\"/profile-page\"\n                render={(props) => <ProfilePage {...props} />}\n            />\n            <Route\n                path=\"/admin\"\n                render={(props) => <AdminPage {...props} />}\n            />\n            <Route\n                path=\"/add_doctor\"\n                render={(props) => <AddDoctor {...props} />}\n            />\n            <Route\n                path=\"/search\"\n                render={(props) => <SearchDoctor {...props} />}\n            />\n            <Route\n                path=\"/doctor\"\n                render={(props) => <DoctorInfo {...props} />}\n            />\n            <Route\n                path=\"/add_patient\"\n                render={(props) => <AddPatient {...props} />}\n            />\n            <Route\n                path=\"/search_patient\"\n                render={(props) => <SearchPatient {...props} />}\n            />\n            <Route\n                path=\"/patient\"\n                render={(props) => <PatientInfo {...props} />}\n            />\n            <Redirect from=\"/\" to=\"/index\" />\n        </Switch>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\serviceWorker.js",[],["146","147"],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\App.js",["148","149"],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\Index.js",["150","151","152","153","154","155"],"\nimport React, {useState} from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  ListGroupItem,\n  ListGroup,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport Footer from \"../components/Footer/Footer.js\";\nimport bigChartData from \"../variables/charts.js\";\nimport IndexNavbar from \"../components/Navbars/IndexNavbar\";\nimport Web3 from \"web3\";\nimport Meme from \"../abis/Meme.json\";\nimport ipfs from \"../utils/ipfs\";\n\nexport default function App() {\n  const [loadweb3s, setLoadweb3s] = useState('');\n  const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\n  const [account, setAccount] = useState('');\n\n  React.useEffect(() => {\n    document.body.classList.toggle(\"landing-page\");\n\n     return function cleanup() {\n      document.body.classList.toggle(\"landing-page\");\n    };\n\n    if (!loadweb3s) {\n      loadWeb3();\n    }\n    if (!loadBlockchainDates) {\n      loadBlockchainDate();\n    }\n  },[]);\n\n  const loadWeb3 = async () => {\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } if(window.web3){\n      window.web3 = new Web3(window.web3.currentProvider)\n    }else{\n      window.alert('Please use Metamask');\n    }\n  };\n\n  const loadBlockchainDate = async () => {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    setAccount(accounts[0])\n    const networkId = await web3.eth.net.getId()\n    const networkData = Meme.networks[networkId]\n    if(networkData){\n\n    }else{\n      window.alert(\"Smart contract not deployed to the detected network\")\n    }\n  };\n\n\n\n\n  return (\n      <>\n        <IndexNavbar isadmin={\"false\"}/>\n        <div className=\"wrapper\">\n          <div className=\"page-header\">\n            <img\n                alt=\"...\"\n                className=\"path\"\n                src={require(\"../assets/img/blob.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"path2\"\n                src={require(\"../assets/img/path2.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"shapes triangle\"\n                src={require(\"../assets/img/triunghiuri.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"shapes wave\"\n                src={require(\"../assets/img/waves.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"shapes squares\"\n                src={require(\"../assets/img/patrat.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"shapes circle\"\n                src={require(\"../assets/img/cercuri.png\").default}\n            />\n            <div className=\"content-center\">\n              <Row className=\"row-grid justify-content-between align-items-center text-left\">\n                <Col lg=\"6\" md=\"6\">\n                  <h1 className=\"text-white\">\n                    We keep your coin <br />\n                    <span className=\"text-white\">secured</span>\n                  </h1>\n                  <p className=\"text-white mb-3\">\n                    A wonderful serenity has taken possession of my entire soul,\n                    like these sweet mornings of spring which I enjoy with my\n                    whole heart. I am alone, and feel...\n                  </p>\n                </Col>\n                <Col lg=\"4\" md=\"5\">\n                  <img\n                      alt=\"...\"\n                      className=\"img-fluid\"\n                      src={require(\"../assets/img/etherum.png\").default}\n                  />\n                </Col>\n              </Row>\n            </div>\n          </div>\n          <section className=\"section section-lg\">\n            <section className=\"section\">\n              <img\n                  alt=\"...\"\n                  className=\"path\"\n                  src={require(\"../assets/img/path4.png\").default}\n              />\n              <Container>\n                <Row className=\"row-grid justify-content-between\">\n                  <Col className=\"mt-lg-5\" md=\"5\">\n                    <Row>\n                      <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                        <Card className=\"card-stats\">\n                          <CardBody>\n                            <Row>\n                              <Col md=\"4\" xs=\"5\">\n                                <div className=\"icon-big text-center icon-warning\">\n                                  <i className=\"tim-icons icon-trophy text-warning\" />\n                                </div>\n                              </Col>\n                              <Col md=\"8\" xs=\"7\">\n                                <div className=\"numbers\">\n                                  <CardTitle tag=\"p\">3,237</CardTitle>\n                                  <p />\n                                  <p className=\"card-category\">Awards</p>\n                                </div>\n                              </Col>\n                            </Row>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                      <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                        <Card className=\"card-stats upper bg-default\">\n                          <CardBody>\n                            <Row>\n                              <Col md=\"4\" xs=\"5\">\n                                <div className=\"icon-big text-center icon-warning\">\n                                  <i className=\"tim-icons icon-coins text-white\" />\n                                </div>\n                              </Col>\n                              <Col md=\"8\" xs=\"7\">\n                                <div className=\"numbers\">\n                                  <CardTitle tag=\"p\">3,653</CardTitle>\n                                  <p />\n                                  <p className=\"card-category\">Commits</p>\n                                </div>\n                              </Col>\n                            </Row>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                        <Card className=\"card-stats\">\n                          <CardBody>\n                            <Row>\n                              <Col md=\"4\" xs=\"5\">\n                                <div className=\"icon-big text-center icon-warning\">\n                                  <i className=\"tim-icons icon-gift-2 text-info\" />\n                                </div>\n                              </Col>\n                              <Col md=\"8\" xs=\"7\">\n                                <div className=\"numbers\">\n                                  <CardTitle tag=\"p\">593</CardTitle>\n                                  <p />\n                                  <p className=\"card-category\">Presents</p>\n                                </div>\n                              </Col>\n                            </Row>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                      <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                        <Card className=\"card-stats\">\n                          <CardBody>\n                            <Row>\n                              <Col md=\"4\" xs=\"5\">\n                                <div className=\"icon-big text-center icon-warning\">\n                                  <i className=\"tim-icons icon-credit-card text-success\" />\n                                </div>\n                              </Col>\n                              <Col md=\"8\" xs=\"7\">\n                                <div className=\"numbers\">\n                                  <CardTitle tag=\"p\">10,783</CardTitle>\n                                  <p />\n                                  <p className=\"card-category\">Forks</p>\n                                </div>\n                              </Col>\n                            </Row>\n                          </CardBody>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col md=\"6\">\n                    <div className=\"pl-md-5\">\n                      <h1>\n                        Large <br />\n                        Achivements\n                      </h1>\n                      <p>\n                        I should be capable of drawing a single stroke at the\n                        present moment; and yet I feel that I never was a greater\n                        artist than now.\n                      </p>\n                      <br />\n                      <p>\n                        When, while the lovely valley teems with vapour around me,\n                        and the meridian sun strikes the upper surface of the\n                        impenetrable foliage of my trees, and but a few stray.\n                      </p>\n                      <br />\n                      <a\n                          className=\"font-weight-bold text-info mt-5\"\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                      >\n                        Show all{\" \"}\n                        <i className=\"tim-icons icon-minimal-right text-info\" />\n                      </a>\n                    </div>\n                  </Col>\n                </Row>\n              </Container>\n            </section>\n          </section>\n          <section className=\"section section-lg\">\n            <img\n                alt=\"...\"\n                className=\"path\"\n                src={require(\"../assets/img/path4.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"path2\"\n                src={require(\"../assets/img/path5.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"path3\"\n                src={require(\"../assets/img/path2.png\").default}\n            />\n            <Container>\n              <Row className=\"justify-content-center\">\n                <Col lg=\"12\">\n                  <h1 className=\"text-center\">Your best benefit</h1>\n                  <Row className=\"row-grid justify-content-center\">\n                    <Col lg=\"3\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-primary\">\n                          <i className=\"tim-icons icon-money-coins\" />\n                        </div>\n                        <h4 className=\"info-title\">Low Commission</h4>\n                        <hr className=\"line-primary\" />\n                        <p>\n                          Divide details about your work into parts. Write a few\n                          lines about each one. A paragraph describing a feature\n                          will.\n                        </p>\n                      </div>\n                    </Col>\n                    <Col lg=\"3\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-warning\">\n                          <i className=\"tim-icons icon-chart-pie-36\" />\n                        </div>\n                        <h4 className=\"info-title\">High Incomes</h4>\n                        <hr className=\"line-warning\" />\n                        <p>\n                          Divide details about your product or agency work into\n                          parts. Write a few lines about each one. A paragraph\n                          describing feature will be a feature.\n                        </p>\n                      </div>\n                    </Col>\n                    <Col lg=\"3\">\n                      <div className=\"info\">\n                        <div className=\"icon icon-success\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </div>\n                        <h4 className=\"info-title\">Verified People</h4>\n                        <hr className=\"line-success\" />\n                        <p>\n                          Divide details about your product or agency work into\n                          parts. Write a few lines about each one. A paragraph\n                          describing be enough.\n                        </p>\n                      </div>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n          <section className=\"section section-lg section-safe\">\n            <img\n                alt=\"...\"\n                className=\"path\"\n                src={require(\"../assets/img/path5.png\").default}\n            />\n            <Container>\n              <Row className=\"row-grid justify-content-between\">\n                <Col md=\"5\">\n                  <img\n                      alt=\"...\"\n                      className=\"img-fluid floating\"\n                      src={require(\"../assets/img/chester-wade.jpg\").default}\n                  />\n                  <Card className=\"card-stats bg-danger\">\n                    <CardBody>\n                      <div className=\"justify-content-center\">\n                        <div className=\"numbers\">\n                          <CardTitle tag=\"p\">100%</CardTitle>\n                          <p className=\"card-category text-white\">Safe</p>\n                        </div>\n                      </div>\n                    </CardBody>\n                  </Card>\n                  <Card className=\"card-stats bg-info\">\n                    <CardBody>\n                      <div className=\"justify-content-center\">\n                        <div className=\"numbers\">\n                          <CardTitle tag=\"p\">573 K</CardTitle>\n                          <p className=\"card-category text-white\">\n                            Satisfied customers\n                          </p>\n                        </div>\n                      </div>\n                    </CardBody>\n                  </Card>\n                  <Card className=\"card-stats bg-default\">\n                    <CardBody>\n                      <div className=\"justify-content-center\">\n                        <div className=\"numbers\">\n                          <CardTitle tag=\"p\">10 425</CardTitle>\n                          <p className=\"card-category text-white\">Business</p>\n                        </div>\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col md=\"6\">\n                  <div className=\"px-md-5\">\n                    <hr className=\"line-success\" />\n                    <h3>Awesome features</h3>\n                    <p>\n                      The design system comes with three pre-built pages to help\n                      you get started faster. You can change the text and images\n                      and you're good to go.\n                    </p>\n                    <ul className=\"list-unstyled mt-5\">\n                      <li className=\"py-2\">\n                        <div className=\"d-flex align-items-center\">\n                          <div className=\"icon icon-success mb-2\">\n                            <i className=\"tim-icons icon-vector\" />\n                          </div>\n                          <div className=\"ml-3\">\n                            <h6>Carefully crafted components</h6>\n                          </div>\n                        </div>\n                      </li>\n                      <li className=\"py-2\">\n                        <div className=\"d-flex align-items-center\">\n                          <div className=\"icon icon-success mb-2\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </div>\n                          <div className=\"ml-3\">\n                            <h6>Amazing page examples</h6>\n                          </div>\n                        </div>\n                      </li>\n                      <li className=\"py-2\">\n                        <div className=\"d-flex align-items-center\">\n                          <div className=\"icon icon-success mb-2\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </div>\n                          <div className=\"ml-3\">\n                            <h6>Super friendly support team</h6>\n                          </div>\n                        </div>\n                      </li>\n                    </ul>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n          <section className=\"section section-lg\">\n            <img\n                alt=\"...\"\n                className=\"path\"\n                src={require(\"../assets/img/path4.png\").default}\n            />\n            <img\n                alt=\"...\"\n                className=\"path2\"\n                src={require(\"../assets/img/path2.png\").default}\n            />\n            <Col md=\"12\">\n              <Card className=\"card-chart card-plain\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <hr className=\"line-info\" />\n                      <h5 className=\"card-category\">Total Investments</h5>\n                      <CardTitle tag=\"h2\">Performance</CardTitle>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                        data={bigChartData.data}\n                        options={bigChartData.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </section>\n          <section className=\"section section-lg section-coins\">\n            <img\n                alt=\"...\"\n                className=\"path\"\n                src={require(\"../assets/img/path3.png\").default}\n            />\n            <Container>\n              <Row>\n                <Col md=\"4\">\n                  <hr className=\"line-info\" />\n                  <h1>\n                    Choose the coin{\" \"}\n                    <span className=\"text-info\">that fits your needs</span>\n                  </h1>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"4\">\n                  <Card className=\"card-coin card-plain\">\n                    <CardHeader>\n                      <img\n                          alt=\"...\"\n                          className=\"img-center img-fluid\"\n                          src={require(\"../assets/img/bitcoin.png\").default}\n                      />\n                    </CardHeader>\n                    <CardBody>\n                      <Row>\n                        <Col className=\"text-center\" md=\"12\">\n                          <h4 className=\"text-uppercase\">Light Coin</h4>\n                          <span>Plan</span>\n                          <hr className=\"line-primary\" />\n                        </Col>\n                      </Row>\n                      <Row>\n                        <ListGroup>\n                          <ListGroupItem>50 messages</ListGroupItem>\n                          <ListGroupItem>100 emails</ListGroupItem>\n                          <ListGroupItem>24/7 Support</ListGroupItem>\n                        </ListGroup>\n                      </Row>\n                    </CardBody>\n                    <CardFooter className=\"text-center\">\n                      <Button className=\"btn-simple\" color=\"primary\">\n                        Get plan\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </Col>\n                <Col md=\"4\">\n                  <Card className=\"card-coin card-plain\">\n                    <CardHeader>\n                      <img\n                          alt=\"...\"\n                          className=\"img-center img-fluid\"\n                          src={require(\"../assets/img/etherum.png\").default}\n                      />\n                    </CardHeader>\n                    <CardBody>\n                      <Row>\n                        <Col className=\"text-center\" md=\"12\">\n                          <h4 className=\"text-uppercase\">Dark Coin</h4>\n                          <span>Plan</span>\n                          <hr className=\"line-success\" />\n                        </Col>\n                      </Row>\n                      <Row>\n                        <ListGroup>\n                          <ListGroupItem>150 messages</ListGroupItem>\n                          <ListGroupItem>1000 emails</ListGroupItem>\n                          <ListGroupItem>24/7 Support</ListGroupItem>\n                        </ListGroup>\n                      </Row>\n                    </CardBody>\n                    <CardFooter className=\"text-center\">\n                      <Button className=\"btn-simple\" color=\"success\">\n                        Get plan\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </Col>\n                <Col md=\"4\">\n                  <Card className=\"card-coin card-plain\">\n                    <CardHeader>\n                      <img\n                          alt=\"...\"\n                          className=\"img-center img-fluid\"\n                          src={require(\"../assets/img/ripp.png\").default}\n                      />\n                    </CardHeader>\n                    <CardBody>\n                      <Row>\n                        <Col className=\"text-center\" md=\"12\">\n                          <h4 className=\"text-uppercase\">Bright Coin</h4>\n                          <span>Plan</span>\n                          <hr className=\"line-info\" />\n                        </Col>\n                      </Row>\n                      <Row>\n                        <ListGroup>\n                          <ListGroupItem>350 messages</ListGroupItem>\n                          <ListGroupItem>10K emails</ListGroupItem>\n                          <ListGroupItem>24/7 Support</ListGroupItem>\n                        </ListGroup>\n                      </Row>\n                    </CardBody>\n                    <CardFooter className=\"text-center\">\n                      <Button className=\"btn-simple\" color=\"info\">\n                        Get plan\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n          <Footer />\n        </div>\n      </>\n  );\n}\n",["156","157"],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Navbars.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Pagination.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Tabs.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\JavaScript.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Signup.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Basics.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Typography.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Notifications.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Download.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\Examples.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\IndexSections\\NucleoIcons.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\PageHeader\\PageHeader.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\Footer\\Footer.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\Navbars\\IndexNavbar.js",["158","159","160"],"\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n// reactstrap components\nimport {\n\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  NavbarBrand,\n  Navbar,\n  NavItem,\n  NavLink,\n  Nav,\n  Container,\n  Row,\n  Col,\n\n} from \"reactstrap\";\n\nexport default function IndexNavbar({isadmin}) {\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const [isAdmin, setIsAdmin] = React.useState(false);\n  const [collapseOut, setCollapseOut] = React.useState(\"\");\n  const [color, setColor] = React.useState(\"navbar-transparent\");\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", changeColor);\n    if(!isAdmin){\n      if(isadmin == \"true\"){\n        setIsAdmin(true);\n      }\n    }\n    return function cleanup() {\n      window.removeEventListener(\"scroll\", changeColor);\n    };\n\n  },[]);\n  const changeColor = () => {\n    if (\n      document.documentElement.scrollTop > 99 ||\n      document.body.scrollTop > 99\n    ) {\n      setColor(\"bg-info\");\n    } else if (\n      document.documentElement.scrollTop < 100 ||\n      document.body.scrollTop < 100\n    ) {\n      setColor(\"navbar-transparent\");\n    }\n  };\n  const toggleCollapse = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    setCollapseOpen(!collapseOpen);\n  };\n  const onCollapseExiting = () => {\n    setCollapseOut(\"collapsing-out\");\n  };\n  const onCollapseExited = () => {\n    setCollapseOut(\"\");\n  };\n  const scrollToDownload = () => {\n    document\n      .getElementById(\"download-section\")\n      .scrollIntoView({ behavior: \"smooth\" });\n  };\n  return (\n    <Navbar className={\"fixed-top \" + color} color-on-scroll=\"100\" expand=\"lg\">\n      <Container>\n        <div className=\"navbar-translate\">\n          <NavbarBrand to=\"/\" tag={Link} id=\"navbar-brand\">\n            <span>Helio</span>\n          </NavbarBrand>\n\n          <button\n            aria-expanded={collapseOpen}\n            className=\"navbar-toggler navbar-toggler\"\n            onClick={toggleCollapse}\n          >\n            <span className=\"navbar-toggler-bar bar1\" />\n            <span className=\"navbar-toggler-bar bar2\" />\n            <span className=\"navbar-toggler-bar bar3\" />\n          </button>\n        </div>\n        <Collapse\n          className={\"justify-content-end \" + collapseOut}\n          navbar\n          isOpen={collapseOpen}\n          onExiting={onCollapseExiting}\n          onExited={onCollapseExited}\n        >\n          <div className=\"navbar-collapse-header\">\n            <Row>\n              <Col className=\"collapse-brand\" xs=\"6\">\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Helio\n                </a>\n              </Col>\n              <Col className=\"collapse-close text-right\" xs=\"6\">\n                <button\n                  aria-expanded={collapseOpen}\n                  className=\"navbar-toggler\"\n                  onClick={toggleCollapse}\n                >\n                  <i className=\"tim-icons icon-simple-remove\" />\n                </button>\n              </Col>\n            </Row>\n          </div>\n          <Nav navbar>\n\n\n            {/*<UncontrolledDropdown nav>*/}\n            {/*  <DropdownToggle*/}\n            {/*    caret*/}\n            {/*    color=\"default\"*/}\n            {/*    data-toggle=\"dropdown\"*/}\n            {/*    href=\"#pablo\"*/}\n            {/*    nav*/}\n            {/*    onClick={(e) => e.preventDefault()}*/}\n            {/*  >*/}\n            {/*    <i className=\"fa fa-cogs d-lg-none d-xl-none\" />*/}\n            {/*    Menus*/}\n            {/*  </DropdownToggle>*/}\n            {/*  <DropdownMenu className=\"dropdown-with-icons\">*/}\n\n            {/*    <DropdownItem tag={Link} to=\"/register-page\">*/}\n            {/*      <i className=\"tim-icons icon-bullet-list-67\" />*/}\n            {/*      Register Page*/}\n            {/*    </DropdownItem>*/}\n            {/*    <DropdownItem tag={Link} to=\"/landing-page\">*/}\n            {/*      <i className=\"tim-icons icon-image-02\" />*/}\n            {/*      Landing Page*/}\n            {/*    </DropdownItem>*/}\n            {/*    <DropdownItem tag={Link} to=\"/profile-page\">*/}\n            {/*      <i className=\"tim-icons icon-single-02\" />*/}\n            {/*      Profile Page*/}\n            {/*    </DropdownItem>*/}\n            {/*  </DropdownMenu>*/}\n            {/*</UncontrolledDropdown>*/}\n            {isAdmin ?\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                      caret\n                      color=\"default\"\n                      data-toggle=\"dropdown\"\n                      href=\"#pablo\"\n                      nav\n                      onClick={(e) => e.preventDefault()}\n                  >\n                    <i className=\"fa fa-cogs d-lg-none d-xl-none\" />\n                    Admin\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-with-icons\">\n\n                    <DropdownItem tag={Link} to=\"/add_doctor\">\n                      <i className=\"tim-icons icon-bullet-list-67\" />\n                      Add Doctor\n                    </DropdownItem>\n                    <DropdownItem tag={Link} to=\"/add_patient\">\n                      <i className=\"tim-icons icon-image-02\" />\n                      Add Patient\n                    </DropdownItem>\n                    <DropdownItem tag={Link} to=\"/search\">\n                      <i className=\"tim-icons icon-single-02\" />\n                      View Doctor\n                    </DropdownItem>\n                    {/*<DropdownItem tag={Link} to=\"/search_patient\">*/}\n                    {/*  <i className=\"tim-icons icon-single-02\" />*/}\n                    {/*  View Patient*/}\n                    {/*</DropdownItem>*/}\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                : <></>}\n            <NavItem className=\"p-0\">\n              <NavLink\n                  data-placement=\"bottom\"\n                  tag={Link}\n                  rel=\"noopener noreferrer\"\n                  to=\"/admin\"\n                  title=\"Profile\"\n              >\n                <i className=\"tim-icons icon-single-02\"/>\n                <p className=\"d-lg-none d-xl-none\">Profile</p>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\RegisterPage.js",["161"],"\nimport React from \"react\";\nimport classnames from \"classnames\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardImg,\n  CardTitle,\n  Label,\n  FormGroup,\n  Form,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroup,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport ExamplesNavbar from \"../../components/Navbars/ExamplesNavbar.js\";\nimport Footer from \"../../components/Footer/Footer.js\";\nimport IndexNavbar from \"../../components/Navbars/IndexNavbar\";\n\nexport default function RegisterPage() {\n  const [squares1to6, setSquares1to6] = React.useState(\"\");\n  const [squares7and8, setSquares7and8] = React.useState(\"\");\n  const [fullNameFocus, setFullNameFocus] = React.useState(false);\n  const [emailFocus, setEmailFocus] = React.useState(false);\n  const [passwordFocus, setPasswordFocus] = React.useState(false);\n  React.useEffect(() => {\n    document.body.classList.toggle(\"register-page\");\n    document.documentElement.addEventListener(\"mousemove\", followCursor);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      document.body.classList.toggle(\"register-page\");\n      document.documentElement.removeEventListener(\"mousemove\", followCursor);\n    };\n  },[]);\n  const followCursor = (event) => {\n    let posX = event.clientX - window.innerWidth / 2;\n    let posY = event.clientY - window.innerWidth / 6;\n    setSquares1to6(\n      \"perspective(500px) rotateY(\" +\n        posX * 0.05 +\n        \"deg) rotateX(\" +\n        posY * -0.05 +\n        \"deg)\"\n    );\n    setSquares7and8(\n      \"perspective(500px) rotateY(\" +\n        posX * 0.02 +\n        \"deg) rotateX(\" +\n        posY * -0.02 +\n        \"deg)\"\n    );\n  };\n  return (\n    <>\n      <IndexNavbar />\n      <div className=\"wrapper\">\n        <div className=\"page-header\">\n          <div className=\"page-header-image\" />\n          <div className=\"content\">\n            <Container>\n              <Row>\n                <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\n                  <div\n                    className=\"square square-7\"\n                    id=\"square7\"\n                    style={{ transform: squares7and8 }}\n                  />\n                  <div\n                    className=\"square square-8\"\n                    id=\"square8\"\n                    style={{ transform: squares7and8 }}\n                  />\n                  <Card className=\"card-register\">\n                    <CardHeader>\n                      <CardImg\n                        alt=\"...\"\n                        src={require(\"../../assets/img/square-purple-1.png\").default}\n                      />\n                      <CardTitle tag=\"h4\">Register</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                      <Form className=\"form\">\n                        <InputGroup\n                          className={classnames({\n                            \"input-group-focus\": fullNameFocus,\n                          })}\n                        >\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"tim-icons icon-single-02\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            placeholder=\"Full Name\"\n                            type=\"text\"\n                            onFocus={(e) => setFullNameFocus(true)}\n                            onBlur={(e) => setFullNameFocus(false)}\n                          />\n                        </InputGroup>\n                        <InputGroup\n                          className={classnames({\n                            \"input-group-focus\": emailFocus,\n                          })}\n                        >\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"tim-icons icon-email-85\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            placeholder=\"Email\"\n                            type=\"text\"\n                            onFocus={(e) => setEmailFocus(true)}\n                            onBlur={(e) => setEmailFocus(false)}\n                          />\n                        </InputGroup>\n                        <InputGroup\n                          className={classnames({\n                            \"input-group-focus\": passwordFocus,\n                          })}\n                        >\n                          <InputGroupAddon addonType=\"prepend\">\n                            <InputGroupText>\n                              <i className=\"tim-icons icon-lock-circle\" />\n                            </InputGroupText>\n                          </InputGroupAddon>\n                          <Input\n                            placeholder=\"Password\"\n                            type=\"text\"\n                            onFocus={(e) => setPasswordFocus(true)}\n                            onBlur={(e) => setPasswordFocus(false)}\n                          />\n                        </InputGroup>\n                        <FormGroup check className=\"text-left\">\n                          <Label check>\n                            <Input type=\"checkbox\" />\n                            <span className=\"form-check-sign\" />I agree to the{\" \"}\n                            <a\n                              href=\"#pablo\"\n                              onClick={(e) => e.preventDefault()}\n                            >\n                              terms and conditions\n                            </a>\n                            .\n                          </Label>\n                        </FormGroup>\n                      </Form>\n                    </CardBody>\n                    <CardFooter>\n                      <Button className=\"btn-round\" color=\"primary\" size=\"lg\">\n                        Get Started\n                      </Button>\n                    </CardFooter>\n                  </Card>\n                </Col>\n              </Row>\n              <div className=\"register-bg\" />\n              <div\n                className=\"square square-1\"\n                id=\"square1\"\n                style={{ transform: squares1to6 }}\n              />\n              <div\n                className=\"square square-2\"\n                id=\"square2\"\n                style={{ transform: squares1to6 }}\n              />\n              <div\n                className=\"square square-3\"\n                id=\"square3\"\n                style={{ transform: squares1to6 }}\n              />\n              <div\n                className=\"square square-4\"\n                id=\"square4\"\n                style={{ transform: squares1to6 }}\n              />\n              <div\n                className=\"square square-5\"\n                id=\"square5\"\n                style={{ transform: squares1to6 }}\n              />\n              <div\n                className=\"square square-6\"\n                id=\"square6\"\n                style={{ transform: squares1to6 }}\n              />\n            </Container>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n}\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\ProfilePage.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"\nimport React, {useState} from \"react\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  Label,\n  FormGroup,\n  Form,\n  Input,\n  FormText,\n  NavItem,\n  NavLink,\n  Nav,\n  Table,\n  TabContent,\n  TabPane,\n  Container,\n  Row,\n  Col,\n  UncontrolledTooltip,\n  UncontrolledCarousel, CardTitle,\n} from \"reactstrap\";\n\nimport Footer from \"../../components/Footer/Footer.js\";\nimport IndexNavbar from \"../../components/Navbars/IndexNavbar\";\nimport Web3 from \"web3\";\nimport Meme from \"../../abis/Meme.json\";\nimport ipfs from \"../../utils/ipfs\";\n\nconst carouselItems = [\n  {\n    src: require(\"../../assets/img/denys.jpg\").default,\n    altText: \"Slide 1\",\n    caption: \"Big City Life, United States\",\n  },\n  {\n    src: require(\"../../assets/img/fabien-bazanegue.jpg\").default,\n    altText: \"Slide 2\",\n    caption: \"Somewhere Beyond, United States\",\n  },\n  {\n    src: require(\"../../assets/img/mark-finn.jpg\").default,\n    altText: \"Slide 3\",\n    caption: \"Stocks, United States\",\n  },\n];\n\nlet ps = null;\n\nexport default function ProfilePage() {\n  const [tabs, setTabs] = React.useState(1);\n  const [loadweb3s, setLoadweb3s] = useState('');\n  const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\n  const [account, setAccount] = useState('');\n  const [buffer, setBuffer] = useState(null);\n  const [contarct, setContarct] = useState(null);\n  const [memeHash, setmemeHash] = useState('null');\n\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n    document.body.classList.toggle(\"profile-page\");\n\n    if(!loadweb3s) {\n      loadWeb3();\n    }\n    if(!loadBlockchainDates) {\n      loadBlockchainDate();\n    }\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.documentElement.className += \" perfect-scrollbar-off\";\n        document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n      }\n      document.body.classList.toggle(\"profile-page\");\n    };\n  },[]);\n\n  const loadWeb3 = async () => {\n    console.log(\"hello\");\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    } if(window.web3){\n      window.web3 = new Web3(window.web3.currentProvider)\n    }else{\n      window.alert('Please use Metamask');\n    }\n  };\n\n  const loadBlockchainDate = async () => {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    setAccount(accounts[0])\n    const networkId = await web3.eth.net.getId()\n    const networkData = Meme.networks[networkId]\n    if(networkData){\n      const abi = Meme.abi\n      const address = networkData.address\n      const contract = web3.eth.Contract(abi,address)\n      setContarct(contract)\n      const memeHash = await contract.methods.get().call()\n      setmemeHash(memeHash)\n    }else{\n      window.alert(\"Smart contract not deployed to the detected network\")\n    }\n  };\n\n  const captureFile = (event) =>{\n    event.preventDefault();\n    const  file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = () =>{\n      setBuffer(Buffer(reader.result))\n    }\n  }\n\n  const onSubmit = async (event) =>{\n    event.preventDefault();\n    console.log('form submitting');\n\n    const added = await ipfs.add(buffer)\n    // const val = new CID(added.path).toV1().toString('base32')\n    const val = added.path\n    const memeHashs = val;\n\n    await contarct.methods.set(memeHashs).send({from:account}).then((r)=>{\n      setmemeHash(memeHashs)\n      window.alert(\"hi\");\n    })\n  }\n\n\n  return (\n    <>\n      <IndexNavbar />\n      <div className=\"wrapper\">\n        <div className=\"page-header\">\n          <img\n            alt=\"...\"\n            className=\"dots\"\n            src={require(\"../../assets/img/dots.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"path\"\n            src={require(\"../../assets/img/path4.png\").default}\n          />\n          <Container className=\"align-items-center\">\n            <Row>\n              <Col lg=\"6\" md=\"6\">\n                <h1 className=\"profile-title text-left\" style={{lineBreak:\"anywhere\"}}>{account}</h1>\n                <h5 className=\"text-on-back\">Role</h5>\n\n              </Col>\n              <Col className=\"ml-auto mr-auto\" lg=\"4\" md=\"6\">\n                <Card className=\"card-coin card-plain\">\n                  <CardHeader>\n                    <img\n                      alt=\"...\"\n                      className=\"img-center img-fluid rounded-circle\"\n                      src={`https://ipfs.infura.io:5001/api/v0/cat?arg=${memeHash}`}\n                    />\n                    <h4 className=\"title\">Profile</h4>\n                  </CardHeader>\n                  <CardBody>\n                    <form onSubmit={onSubmit}>\n                      <input type=\"file\" onChange={captureFile}/>\n                      <input type=\"submit\"/>\n                    </form>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n        <section className=\"section section-lg\">\n          <section className=\"section\">\n            <img\n                alt=\"...\"\n                className=\"path\"\n                src={require(\"../../assets/img/path4.png\").default}\n            />\n            <Container>\n              <Row className=\"row-grid justify-content-between\">\n                <Col className=\"mt-lg-5\" md=\"5\">\n                  <Row>\n                    <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                      <Card className=\"card-stats\">\n                        <CardBody>\n                          <Row>\n                            <Col md=\"4\" xs=\"5\">\n                              <div className=\"icon-big text-center icon-warning\">\n                                <i className=\"tim-icons icon-single-02 text-warning\" />\n                              </div>\n                            </Col>\n                            <Col md=\"8\" xs=\"7\">\n                              <div className=\"numbers\">\n                                <CardTitle tag=\"p\">3,237</CardTitle>\n                                <p />\n                                <p className=\"card-category\">Doctors</p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                      <Card className=\"card-stats upper bg-default\">\n                        <CardBody>\n                          <Row>\n                            <Col md=\"4\" xs=\"5\">\n                              <div className=\"icon-big text-center icon-warning\">\n                                <i className=\"tim-icons icon-single-02 text-white\" />\n                              </div>\n                            </Col>\n                            <Col md=\"8\" xs=\"7\">\n                              <div className=\"numbers\">\n                                <CardTitle tag=\"p\">3,653</CardTitle>\n                                <p />\n                                <p className=\"card-category\">patient</p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n\n                </Col>\n                <Col md=\"6\">\n                  <div className=\"pl-md-5\">\n                    <h1>\n                      Large <br />\n                      Achivements\n                    </h1>\n                    <p>\n                      I should be capable of drawing a single stroke at the\n                      present moment; and yet I feel that I never was a greater\n                      artist than now.\n                    </p>\n                    <br />\n                    <p>\n                      When, while the lovely valley teems with vapour around me,\n                      and the meridian sun strikes the upper surface of the\n                      impenetrable foliage of my trees, and but a few stray.\n                    </p>\n                    <br />\n                    <a\n                        className=\"font-weight-bold text-info mt-5\"\n                        href=\"#pablo\"\n                        onClick={(e) => e.preventDefault()}\n                    >\n                      Show all{\" \"}\n                      <i className=\"tim-icons icon-minimal-right text-info\" />\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\LandingPage.js",["182"],"\nimport React from \"react\";\n// react plugin used to create charts\nimport { Line } from \"react-chartjs-2\";\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  ListGroupItem,\n  ListGroup,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport ExamplesNavbar from \"../../components/Navbars/ExamplesNavbar.js\";\nimport Footer from \"../../components/Footer/Footer.js\";\n\nimport bigChartData from \"../../variables/charts.js\";\nimport IndexNavbar from \"../../components/Navbars/IndexNavbar\";\n\nexport default function LandingPage() {\n  React.useEffect(() => {\n    document.body.classList.toggle(\"landing-page\");\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      document.body.classList.toggle(\"landing-page\");\n    };\n  },[]);\n  return (\n    <>\n      <IndexNavbar />\n      <div className=\"wrapper\">\n        <div className=\"page-header\">\n          <img\n            alt=\"...\"\n            className=\"path\"\n            src={require(\"../../assets/img/blob.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"path2\"\n            src={require(\"../../assets/img/path2.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"shapes triangle\"\n            src={require(\"../../assets/img/triunghiuri.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"shapes wave\"\n            src={require(\"../../assets/img/waves.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"shapes squares\"\n            src={require(\"../../assets/img/patrat.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"shapes circle\"\n            src={require(\"../../assets/img/cercuri.png\").default}\n          />\n          <div className=\"content-center\">\n            <Row className=\"row-grid justify-content-between align-items-center text-left\">\n              <Col lg=\"6\" md=\"6\">\n                <h1 className=\"text-white\">\n                  We keep your coin <br />\n                  <span className=\"text-white\">secured</span>\n                </h1>\n                <p className=\"text-white mb-3\">\n                  A wonderful serenity has taken possession of my entire soul,\n                  like these sweet mornings of spring which I enjoy with my\n                  whole heart. I am alone, and feel...\n                </p>\n              </Col>\n              <Col lg=\"4\" md=\"5\">\n                <img\n                  alt=\"...\"\n                  className=\"img-fluid\"\n                  src={require(\"../../assets/img/etherum.png\").default}\n                />\n              </Col>\n            </Row>\n          </div>\n        </div>\n        <section className=\"section section-lg\">\n          <section className=\"section\">\n            <img\n              alt=\"...\"\n              className=\"path\"\n              src={require(\"../../assets/img/path4.png\").default}\n            />\n            <Container>\n              <Row className=\"row-grid justify-content-between\">\n                <Col className=\"mt-lg-5\" md=\"5\">\n                  <Row>\n                    <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                      <Card className=\"card-stats\">\n                        <CardBody>\n                          <Row>\n                            <Col md=\"4\" xs=\"5\">\n                              <div className=\"icon-big text-center icon-warning\">\n                                <i className=\"tim-icons icon-trophy text-warning\" />\n                              </div>\n                            </Col>\n                            <Col md=\"8\" xs=\"7\">\n                              <div className=\"numbers\">\n                                <CardTitle tag=\"p\">3,237</CardTitle>\n                                <p />\n                                <p className=\"card-category\">Awards</p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                      <Card className=\"card-stats upper bg-default\">\n                        <CardBody>\n                          <Row>\n                            <Col md=\"4\" xs=\"5\">\n                              <div className=\"icon-big text-center icon-warning\">\n                                <i className=\"tim-icons icon-coins text-white\" />\n                              </div>\n                            </Col>\n                            <Col md=\"8\" xs=\"7\">\n                              <div className=\"numbers\">\n                                <CardTitle tag=\"p\">3,653</CardTitle>\n                                <p />\n                                <p className=\"card-category\">Commits</p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                      <Card className=\"card-stats\">\n                        <CardBody>\n                          <Row>\n                            <Col md=\"4\" xs=\"5\">\n                              <div className=\"icon-big text-center icon-warning\">\n                                <i className=\"tim-icons icon-gift-2 text-info\" />\n                              </div>\n                            </Col>\n                            <Col md=\"8\" xs=\"7\">\n                              <div className=\"numbers\">\n                                <CardTitle tag=\"p\">593</CardTitle>\n                                <p />\n                                <p className=\"card-category\">Presents</p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                    <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\n                      <Card className=\"card-stats\">\n                        <CardBody>\n                          <Row>\n                            <Col md=\"4\" xs=\"5\">\n                              <div className=\"icon-big text-center icon-warning\">\n                                <i className=\"tim-icons icon-credit-card text-success\" />\n                              </div>\n                            </Col>\n                            <Col md=\"8\" xs=\"7\">\n                              <div className=\"numbers\">\n                                <CardTitle tag=\"p\">10,783</CardTitle>\n                                <p />\n                                <p className=\"card-category\">Forks</p>\n                              </div>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col md=\"6\">\n                  <div className=\"pl-md-5\">\n                    <h1>\n                      Large <br />\n                      Achivements\n                    </h1>\n                    <p>\n                      I should be capable of drawing a single stroke at the\n                      present moment; and yet I feel that I never was a greater\n                      artist than now.\n                    </p>\n                    <br />\n                    <p>\n                      When, while the lovely valley teems with vapour around me,\n                      and the meridian sun strikes the upper surface of the\n                      impenetrable foliage of my trees, and but a few stray.\n                    </p>\n                    <br />\n                    <a\n                      className=\"font-weight-bold text-info mt-5\"\n                      href=\"#pablo\"\n                      onClick={(e) => e.preventDefault()}\n                    >\n                      Show all{\" \"}\n                      <i className=\"tim-icons icon-minimal-right text-info\" />\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </section>\n        </section>\n        <section className=\"section section-lg\">\n          <img\n            alt=\"...\"\n            className=\"path\"\n            src={require(\"../../assets/img/path4.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"path2\"\n            src={require(\"../../assets/img/path5.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"path3\"\n            src={require(\"../../assets/img/path2.png\").default}\n          />\n          <Container>\n            <Row className=\"justify-content-center\">\n              <Col lg=\"12\">\n                <h1 className=\"text-center\">Your best benefit</h1>\n                <Row className=\"row-grid justify-content-center\">\n                  <Col lg=\"3\">\n                    <div className=\"info\">\n                      <div className=\"icon icon-primary\">\n                        <i className=\"tim-icons icon-money-coins\" />\n                      </div>\n                      <h4 className=\"info-title\">Low Commission</h4>\n                      <hr className=\"line-primary\" />\n                      <p>\n                        Divide details about your work into parts. Write a few\n                        lines about each one. A paragraph describing a feature\n                        will.\n                      </p>\n                    </div>\n                  </Col>\n                  <Col lg=\"3\">\n                    <div className=\"info\">\n                      <div className=\"icon icon-warning\">\n                        <i className=\"tim-icons icon-chart-pie-36\" />\n                      </div>\n                      <h4 className=\"info-title\">High Incomes</h4>\n                      <hr className=\"line-warning\" />\n                      <p>\n                        Divide details about your product or agency work into\n                        parts. Write a few lines about each one. A paragraph\n                        describing feature will be a feature.\n                      </p>\n                    </div>\n                  </Col>\n                  <Col lg=\"3\">\n                    <div className=\"info\">\n                      <div className=\"icon icon-success\">\n                        <i className=\"tim-icons icon-single-02\" />\n                      </div>\n                      <h4 className=\"info-title\">Verified People</h4>\n                      <hr className=\"line-success\" />\n                      <p>\n                        Divide details about your product or agency work into\n                        parts. Write a few lines about each one. A paragraph\n                        describing be enough.\n                      </p>\n                    </div>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </section>\n        <section className=\"section section-lg section-safe\">\n          <img\n            alt=\"...\"\n            className=\"path\"\n            src={require(\"../../assets/img/path5.png\").default}\n          />\n          <Container>\n            <Row className=\"row-grid justify-content-between\">\n              <Col md=\"5\">\n                <img\n                  alt=\"...\"\n                  className=\"img-fluid floating\"\n                  src={require(\"../../assets/img/chester-wade.jpg\").default}\n                />\n                <Card className=\"card-stats bg-danger\">\n                  <CardBody>\n                    <div className=\"justify-content-center\">\n                      <div className=\"numbers\">\n                        <CardTitle tag=\"p\">100%</CardTitle>\n                        <p className=\"card-category text-white\">Safe</p>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n                <Card className=\"card-stats bg-info\">\n                  <CardBody>\n                    <div className=\"justify-content-center\">\n                      <div className=\"numbers\">\n                        <CardTitle tag=\"p\">573 K</CardTitle>\n                        <p className=\"card-category text-white\">\n                          Satisfied customers\n                        </p>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n                <Card className=\"card-stats bg-default\">\n                  <CardBody>\n                    <div className=\"justify-content-center\">\n                      <div className=\"numbers\">\n                        <CardTitle tag=\"p\">10 425</CardTitle>\n                        <p className=\"card-category text-white\">Business</p>\n                      </div>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n              <Col md=\"6\">\n                <div className=\"px-md-5\">\n                  <hr className=\"line-success\" />\n                  <h3>Awesome features</h3>\n                  <p>\n                    The design system comes with three pre-built pages to help\n                    you get started faster. You can change the text and images\n                    and you're good to go.\n                  </p>\n                  <ul className=\"list-unstyled mt-5\">\n                    <li className=\"py-2\">\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"icon icon-success mb-2\">\n                          <i className=\"tim-icons icon-vector\" />\n                        </div>\n                        <div className=\"ml-3\">\n                          <h6>Carefully crafted components</h6>\n                        </div>\n                      </div>\n                    </li>\n                    <li className=\"py-2\">\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"icon icon-success mb-2\">\n                          <i className=\"tim-icons icon-tap-02\" />\n                        </div>\n                        <div className=\"ml-3\">\n                          <h6>Amazing page examples</h6>\n                        </div>\n                      </div>\n                    </li>\n                    <li className=\"py-2\">\n                      <div className=\"d-flex align-items-center\">\n                        <div className=\"icon icon-success mb-2\">\n                          <i className=\"tim-icons icon-single-02\" />\n                        </div>\n                        <div className=\"ml-3\">\n                          <h6>Super friendly support team</h6>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </section>\n        <section className=\"section section-lg\">\n          <img\n            alt=\"...\"\n            className=\"path\"\n            src={require(\"../../assets/img/path4.png\").default}\n          />\n          <img\n            alt=\"...\"\n            className=\"path2\"\n            src={require(\"../../assets/img/path2.png\").default}\n          />\n          <Col md=\"12\">\n            <Card className=\"card-chart card-plain\">\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <hr className=\"line-info\" />\n                    <h5 className=\"card-category\">Total Investments</h5>\n                    <CardTitle tag=\"h2\">Performance</CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <div className=\"chart-area\">\n                  <Line\n                    data={bigChartData.data}\n                    options={bigChartData.options}\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </section>\n        <section className=\"section section-lg section-coins\">\n          <img\n            alt=\"...\"\n            className=\"path\"\n            src={require(\"../../assets/img/path3.png\").default}\n          />\n          <Container>\n            <Row>\n              <Col md=\"4\">\n                <hr className=\"line-info\" />\n                <h1>\n                  Choose the coin{\" \"}\n                  <span className=\"text-info\">that fits your needs</span>\n                </h1>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"4\">\n                <Card className=\"card-coin card-plain\">\n                  <CardHeader>\n                    <img\n                      alt=\"...\"\n                      className=\"img-center img-fluid\"\n                      src={require(\"../../assets/img/bitcoin.png\").default}\n                    />\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col className=\"text-center\" md=\"12\">\n                        <h4 className=\"text-uppercase\">Light Coin</h4>\n                        <span>Plan</span>\n                        <hr className=\"line-primary\" />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <ListGroup>\n                        <ListGroupItem>50 messages</ListGroupItem>\n                        <ListGroupItem>100 emails</ListGroupItem>\n                        <ListGroupItem>24/7 Support</ListGroupItem>\n                      </ListGroup>\n                    </Row>\n                  </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button className=\"btn-simple\" color=\"primary\">\n                      Get plan\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col md=\"4\">\n                <Card className=\"card-coin card-plain\">\n                  <CardHeader>\n                    <img\n                      alt=\"...\"\n                      className=\"img-center img-fluid\"\n                      src={require(\"../../assets/img/etherum.png\").default}\n                    />\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col className=\"text-center\" md=\"12\">\n                        <h4 className=\"text-uppercase\">Dark Coin</h4>\n                        <span>Plan</span>\n                        <hr className=\"line-success\" />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <ListGroup>\n                        <ListGroupItem>150 messages</ListGroupItem>\n                        <ListGroupItem>1000 emails</ListGroupItem>\n                        <ListGroupItem>24/7 Support</ListGroupItem>\n                      </ListGroup>\n                    </Row>\n                  </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button className=\"btn-simple\" color=\"success\">\n                      Get plan\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Col>\n              <Col md=\"4\">\n                <Card className=\"card-coin card-plain\">\n                  <CardHeader>\n                    <img\n                      alt=\"...\"\n                      className=\"img-center img-fluid\"\n                      src={require(\"../../assets/img/ripp.png\").default}\n                    />\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col className=\"text-center\" md=\"12\">\n                        <h4 className=\"text-uppercase\">Bright Coin</h4>\n                        <span>Plan</span>\n                        <hr className=\"line-info\" />\n                      </Col>\n                    </Row>\n                    <Row>\n                      <ListGroup>\n                        <ListGroupItem>350 messages</ListGroupItem>\n                        <ListGroupItem>10K emails</ListGroupItem>\n                        <ListGroupItem>24/7 Support</ListGroupItem>\n                      </ListGroup>\n                    </Row>\n                  </CardBody>\n                  <CardFooter className=\"text-center\">\n                    <Button className=\"btn-simple\" color=\"info\">\n                      Get plan\n                    </Button>\n                  </CardFooter>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </section>\n        <Footer />\n      </div>\n    </>\n  );\n}\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\variables\\charts.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\components\\Navbars\\ExamplesNavbar.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\utils\\ipfs.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\AdminPage.js",["183","184","185","186","187","188","189","190","191","192","193","194","195"],"\r\nimport React, {useState} from \"react\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    UncontrolledTooltip,\r\n    CardTitle,\r\n} from \"reactstrap\";\r\n\r\nimport Footer from \"../../components/Footer/Footer.js\";\r\nimport IndexNavbar from \"../../components/Navbars/IndexNavbar\";\r\nimport Web3 from \"web3\";\r\nimport Meme from \"../../abis/Meme.json\";\r\nimport ipfs from \"../../utils/ipfs\";\r\nimport Swal from \"sweetalert2\";\r\nimport histroy from \"../../utils/histroy\";\r\n\r\n\r\nlet ps = null;\r\n\r\nexport default function AdminPage() {\r\n    const [isAdmin, setIsAdmin] = useState('');\r\n    const [loadweb3s, setLoadweb3s] = useState('');\r\n    const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\r\n    const [account, setAccount] = useState(null);\r\n    const [contract, setContract] = useState(null);\r\n\r\n    React.useEffect(() => {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            document.documentElement.className += \" perfect-scrollbar-on\";\r\n            document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n            let tables = document.querySelectorAll(\".table-responsive\");\r\n            for (let i = 0; i < tables.length; i++) {\r\n                ps = new PerfectScrollbar(tables[i]);\r\n            }\r\n        }\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        if(!loadweb3s) {\r\n           loadWeb3();\r\n        }\r\n        if(!loadBlockchainDates) {\r\n            loadBlockchainDate();\r\n        }\r\n\r\n        return function cleanup() {\r\n\r\n            document.body.classList.toggle(\"profile-page\");\r\n        };\r\n    },[]);\r\n\r\n    const loadBlockchainDate = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Meme.networks[networkId]\r\n        if(networkData){\r\n            const abi = Meme.abi\r\n            const address = networkData.address\r\n            const contract = web3.eth.Contract(abi,address)\r\n            setContract(contract)\r\n            const adminId = await contract.methods.getAdmin().call()\r\n\r\n            if(adminId == accounts[0]){\r\n                setIsAdmin('false')\r\n            }else{\r\n                // Swal.fire({\r\n                //     icon: 'error',\r\n                //     title: 'Oops...',\r\n                //     text: 'Only Admin have access!',\r\n                // }).then((value)=>{\r\n                //     // history.push(\"/home\")\r\n                //     window.location.href=\"/index\";\r\n                // });\r\n            }\r\n        }else{\r\n            window.alert(\"Smart contract not deployed to the detected network\")\r\n        }\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.location.reload()\r\n        })\r\n        setLoadBlockchainDates('true');\r\n\r\n    };\r\n\r\n    const loadWeb3 = async () => {\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } if(window.web3){\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n        setLoadweb3s('true');\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <IndexNavbar  isadmin={\"true\"}/>\r\n            <div className=\"wrapper\">\r\n                <div className=\"page-header\">\r\n                    <img\r\n                        alt=\"...\"\r\n                        className=\"dots\"\r\n                        src={require(\"../../assets/img/dots.png\").default}\r\n                    />\r\n                    <img\r\n                        alt=\"...\"\r\n                        className=\"path\"\r\n                        src={require(\"../../assets/img/path4.png\").default}\r\n                    />\r\n                    <Container className=\"align-items-center\">\r\n                        <Row>\r\n                            <Col lg=\"6\" md=\"6\">\r\n                                <h1 className=\"profile-title text-left\" style={{lineBreak:\"anywhere\"}}>{account}</h1>\r\n                                <h5 className=\"text-on-back\">Role</h5>\r\n\r\n                            </Col>\r\n                            <Col className=\"ml-auto mr-auto\" lg=\"4\" md=\"6\">\r\n                                <Card className=\"card-coin card-plain\">\r\n                                    <CardHeader>\r\n                                        <img\r\n                                            alt=\"...\"\r\n                                            className=\"img-center img-fluid rounded-circle\"\r\n                                            src={require(\"../../assets/img/path4.png\").default}\r\n                                        />\r\n                                        <h4 className=\"title\">Profile</h4>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n                <section className=\"section section-lg\">\r\n                    <section className=\"section\">\r\n                        <img\r\n                            alt=\"...\"\r\n                            className=\"path\"\r\n                            src={require(\"../../assets/img/path4.png\").default}\r\n                        />\r\n                        <Container>\r\n                            <Row className=\"row-grid justify-content-between\">\r\n                                <Col className=\"mt-lg-5\" md=\"5\">\r\n                                    <Row>\r\n                                        <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\r\n                                            <Card className=\"card-stats\">\r\n                                                <CardBody>\r\n                                                    <Row>\r\n                                                        <Col md=\"4\" xs=\"5\">\r\n                                                            <div className=\"icon-big text-center icon-warning\">\r\n                                                                <i className=\"tim-icons icon-single-02 text-warning\" />\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                        <Col md=\"8\" xs=\"7\">\r\n                                                            <div className=\"numbers\">\r\n                                                                <CardTitle tag=\"p\">3,237</CardTitle>\r\n                                                                <p />\r\n                                                                <p className=\"card-category\">Doctors</p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                        <Col className=\"px-2 py-2\" lg=\"6\" sm=\"12\">\r\n                                            <Card className=\"card-stats upper bg-default\">\r\n                                                <CardBody>\r\n                                                    <Row>\r\n                                                        <Col md=\"4\" xs=\"5\">\r\n                                                            <div className=\"icon-big text-center icon-warning\">\r\n                                                                <i className=\"tim-icons icon-single-02 text-white\" />\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                        <Col md=\"8\" xs=\"7\">\r\n                                                            <div className=\"numbers\">\r\n                                                                <CardTitle tag=\"p\">3,653</CardTitle>\r\n                                                                <p />\r\n                                                                <p className=\"card-category\">patient</p>\r\n                                                            </div>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </CardBody>\r\n                                            </Card>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <div className=\"pl-md-5\">\r\n                                        <h1>\r\n                                            Large <br />\r\n                                            Achivements\r\n                                        </h1>\r\n                                        <p>\r\n                                            I should be capable of drawing a single stroke at the\r\n                                            present moment; and yet I feel that I never was a greater\r\n                                            artist than now.\r\n                                        </p>\r\n                                        <br />\r\n                                        <p>\r\n                                            When, while the lovely valley teems with vapour around me,\r\n                                            and the meridian sun strikes the upper surface of the\r\n                                            impenetrable foliage of my trees, and but a few stray.\r\n                                        </p>\r\n                                        <br />\r\n                                        <a\r\n                                            className=\"font-weight-bold text-info mt-5\"\r\n                                            href=\"#pablo\"\r\n                                            onClick={(e) => e.preventDefault()}\r\n                                        >\r\n                                            Show all{\" \"}\r\n                                            <i className=\"tim-icons icon-minimal-right text-info\" />\r\n                                        </a>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </section>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\utils\\histroy.js",[],"D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\Doctor\\AddDoctor.js",["196","197","198","199"],"\r\nimport React, {useState} from \"react\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n\r\n} from \"reactstrap\";\r\n\r\nimport Footer from \"../../../components/Footer/Footer.js\";\r\nimport IndexNavbar from \"../../../components/Navbars/IndexNavbar\";\r\nimport Web3 from \"web3\";\r\nimport Meme from \"../../../abis/Meme.json\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport ipfs from \"../../../utils/ipfs\";\r\n\r\n\r\nlet ps = null;\r\n\r\nexport default function AddDoctor() {\r\n    const [isAdmin, setIsAdmin] = useState('');\r\n    const [loadweb3s, setLoadweb3s] = useState('');\r\n    const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\r\n    const [account, setAccount] = useState(null);\r\n    const [contract, setContract] = useState(null);\r\n\r\n    React.useEffect(() => {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            document.documentElement.className += \" perfect-scrollbar-on\";\r\n            document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n            let tables = document.querySelectorAll(\".table-responsive\");\r\n            for (let i = 0; i < tables.length; i++) {\r\n                ps = new PerfectScrollbar(tables[i]);\r\n            }\r\n        }\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        if(!loadweb3s) {\r\n            loadWeb3();\r\n        }\r\n        if(!loadBlockchainDates) {\r\n            loadBlockchainDate();\r\n        }\r\n\r\n        return function cleanup() {\r\n\r\n            document.body.classList.toggle(\"profile-page\");\r\n        };\r\n    },[]);\r\n\r\n    const loadBlockchainDate = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Meme.networks[networkId]\r\n        if(networkData){\r\n            const abi = Meme.abi\r\n            const address = networkData.address\r\n            const contract = web3.eth.Contract(abi,address)\r\n            setContract(contract)\r\n            const adminId = await contract.methods.getAdmin().call()\r\n\r\n            if(adminId == accounts[0]){\r\n                setIsAdmin('false')\r\n            }else{\r\n                // Swal.fire({\r\n                //     icon: 'error',\r\n                //     title: 'Oops...',\r\n                //     text: 'Only Admin have access!',\r\n                // }).then((value)=>{\r\n                //     // history.push(\"/home\")\r\n                //     window.location.href=\"/index\";\r\n                // });\r\n            }\r\n        }else{\r\n            window.alert(\"Smart contract not deployed to the detected network\")\r\n        }\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.location.reload()\r\n        })\r\n        setLoadBlockchainDates('true');\r\n\r\n    };\r\n\r\n    const loadWeb3 = async () => {\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } if(window.web3){\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n        setLoadweb3s('true');\r\n    };\r\n\r\n    const AddDoctorForm = () => {\r\n        const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                age: '',\r\n                city: '',\r\n                state: '',\r\n                country: '',\r\n                mobile: '',\r\n                accid: '',\r\n                Speciality: '',\r\n                qualification: '',\r\n                regno:'',\r\n            },\r\n\r\n            validationSchema: Yup.object({\r\n                firstName: Yup.string()\r\n                    .max(15, 'Must be 15 characters or less')\r\n                    .required('Required'),\r\n                lastName: Yup.string()\r\n                    .max(20, 'Must be 20 characters or less')\r\n                    .required('Required'),\r\n                email: Yup.string().email('Invalid email address').required('Required'),\r\n                age: Yup.number()\r\n                    .required('Required')\r\n                    .test(\r\n                        'Is 20+?',\r\n                        'Age must be greater than 20!',\r\n                        (value) => value >= 20\r\n                    ),\r\n                city: Yup.string()\r\n                    .required('Required'),\r\n                state: Yup.string()\r\n                    .required('Required'),\r\n                country: Yup.string()\r\n                    .required('Required'),\r\n                mobile: Yup.string().matches(phoneRegExp, 'Mobile number is not valid'),\r\n                accid: Yup.string()\r\n                    .max(42, 'Must be 20 characters')\r\n                    .min(42, 'Must be 20 characters')\r\n                    .required('Required'),\r\n                Speciality: Yup.string()\r\n                    .required('Required'),\r\n                qualification: Yup.string()\r\n                    .required('Required'),\r\n                regno: Yup.string()\r\n                    .required('Required'),\r\n            }),\r\n            onSubmit: async values => {\r\n                const result = JSON.stringify(values, null, 2);\r\n                await ipfs.add(result).then(\r\n                    hash => {\r\n                        console.log(hash.path)\r\n\r\n                        contract.methods.addDrInfo(values.accid,hash.path).send({from: account})\r\n                            .on(\"confirmation\", (r) => {\r\n                                console.log(\"Doctor Added Successfully\")\r\n                                Swal.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Success',\r\n                                    text: 'Doctor Registered Successfully!',\r\n                                })\r\n                                window.location.reload();\r\n                            }).on(\"error\",(er)=>{\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Error',\r\n                                text: '1.Only Admin can Add Users\\n2.This id Already have a role',\r\n                            })\r\n                            window.location.reload();\r\n                        });\r\n                    });\r\n            },\r\n\r\n        });\r\n        return (\r\n        <Form onSubmit={formik.handleSubmit}>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>First Name</label>\r\n                        <Input\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.firstName}\r\n                        />\r\n                        {formik.touched.firstName && formik.errors.firstName ? (\r\n                            <div>{formik.errors.firstName}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Last Name</label>\r\n                        <Input\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.lastName}\r\n                        />\r\n                        {formik.touched.lastName && formik.errors.lastName ? (\r\n                            <div>{formik.errors.lastName}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <FormGroup>\r\n                        <label>Email</label>\r\n                        <Input\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.email}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>{formik.errors.email}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Age</label>\r\n                        <Input\r\n                            id=\"age\"\r\n                            name=\"age\"\r\n                            type=\"number\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.age}\r\n                        />\r\n                        {formik.touched.age && formik.errors.age ? (\r\n                            <div>{formik.errors.age}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Mobile</label>\r\n                        <Input\r\n                            id=\"mobile\"\r\n                            name=\"mobile\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.mobile}\r\n                        />\r\n                        {formik.touched.mobile && formik.errors.mobile ? (\r\n                            <div>{formik.errors.mobile}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"4\">\r\n                    <FormGroup>\r\n                        <label>City</label>\r\n                        <Input\r\n                            id=\"city\"\r\n                            name=\"city\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.city}\r\n                        />\r\n                        {formik.touched.city && formik.errors.city ? (\r\n                            <div>{formik.errors.city}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                    <FormGroup>\r\n                        <label>State</label>\r\n                        <Input\r\n                            id=\"state\"\r\n                            name=\"state\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.state}\r\n                        />\r\n                        {formik.touched.state && formik.errors.state ? (\r\n                            <div>{formik.errors.state}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                    <FormGroup>\r\n                        <label>Country</label>\r\n                        <Input\r\n                            id=\"country\"\r\n                            name=\"country\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.country}\r\n                        />\r\n                        {formik.touched.country && formik.errors.country ? (\r\n                            <div>{formik.errors.country}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <FormGroup>\r\n                        <label>Account Id</label>\r\n                        <Input\r\n                            id=\"accid\"\r\n                            name=\"accid\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.accid}\r\n                        />\r\n                        {formik.touched.accid && formik.errors.accid ? (\r\n                            <div>{formik.errors.accid}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Speciality</label>\r\n                        <Input\r\n                            id=\"Speciality\"\r\n                            name=\"Speciality\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.Speciality}\r\n                        />\r\n                        {formik.touched.Speciality && formik.errors.Speciality ? (\r\n                            <div>{formik.errors.Speciality}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Register No</label>\r\n                        <Input\r\n                            id=\"regno\"\r\n                            name=\"regno\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.regno}\r\n                        />\r\n                        {formik.touched.regno && formik.errors.regno ? (\r\n                            <div>{formik.errors.regno}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <FormGroup>\r\n                        <label>Qualification</label>\r\n                        <Input\r\n                            id=\"qualification\"\r\n                            name=\"qualification\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.qualification}\r\n                        />\r\n                        {formik.touched.qualification && formik.errors.qualification ? (\r\n                            <div>{formik.errors.qualification}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Button\r\n                className=\"btn-round float-right\"\r\n                color=\"primary\"\r\n                data-placement=\"right\"\r\n                id=\"tooltip341148792\"\r\n                type=\"submit\"\r\n            >\r\n                Add Doctor\r\n            </Button>\r\n        </Form>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <IndexNavbar  isadmin={\"true\"}/>\r\n            <div className=\"wrapper\">\r\n\r\n                <section className=\"section\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"card-plain\">\r\n                                    <CardHeader>\r\n                                        <h1 className=\"profile-title text-left\">AddDoctor</h1>\r\n                                        <h5 className=\"text-on-back\">DR</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <AddDoctorForm />\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\Doctor\\SearchDoctor.js",["200","201","202","203","204","205","206"],"\r\nimport React, {useState} from \"react\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n\r\n} from \"reactstrap\";\r\n\r\nimport Footer from \"../../../components/Footer/Footer.js\";\r\nimport IndexNavbar from \"../../../components/Navbars/IndexNavbar\";\r\nimport Web3 from \"web3\";\r\nimport Meme from \"../../../abis/Meme.json\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport ipfs from \"../../../utils/ipfs\";\r\n\r\n\r\nlet ps = null;\r\n\r\nexport default function SearchDoctor() {\r\n    const [isAdmin, setIsAdmin] = useState('');\r\n    const [loadweb3s, setLoadweb3s] = useState('');\r\n    const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\r\n    const [account, setAccount] = useState(null);\r\n    const [contract, setContract] = useState(null);\r\n\r\n    React.useEffect(() => {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            document.documentElement.className += \" perfect-scrollbar-on\";\r\n            document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n            let tables = document.querySelectorAll(\".table-responsive\");\r\n            for (let i = 0; i < tables.length; i++) {\r\n                ps = new PerfectScrollbar(tables[i]);\r\n            }\r\n        }\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        if(!loadweb3s) {\r\n            loadWeb3();\r\n        }\r\n        if(!loadBlockchainDates) {\r\n            loadBlockchainDate();\r\n        }\r\n\r\n        return function cleanup() {\r\n\r\n            document.body.classList.toggle(\"profile-page\");\r\n        };\r\n    },[]);\r\n\r\n    const loadBlockchainDate = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Meme.networks[networkId]\r\n        if(networkData){\r\n            const abi = Meme.abi\r\n            const address = networkData.address\r\n            const contract = web3.eth.Contract(abi,address)\r\n            setContract(contract)\r\n            const adminId = await contract.methods.getAdmin().call()\r\n\r\n            if(adminId == accounts[0]){\r\n                setIsAdmin('false')\r\n            }else{\r\n                // Swal.fire({\r\n                //     icon: 'error',\r\n                //     title: 'Oops...',\r\n                //     text: 'Only Admin have access!',\r\n                // }).then((value)=>{\r\n                //     // history.push(\"/home\")\r\n                //     window.location.href=\"/index\";\r\n                // });\r\n            }\r\n        }else{\r\n            window.alert(\"Smart contract not deployed to the detected network\")\r\n        }\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.location.reload()\r\n        })\r\n        setLoadBlockchainDates('true');\r\n\r\n    };\r\n\r\n    const loadWeb3 = async () => {\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } if(window.web3){\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n        setLoadweb3s('true');\r\n    };\r\n\r\n    const AddDoctorForm = () => {\r\n        const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                accid: '',\r\n            },\r\n\r\n            validationSchema: Yup.object({\r\n                accid: Yup.string()\r\n                    .max(42, 'Must be 20 characters')\r\n                    .min(42, 'Must be 20 characters')\r\n                    .required('Required'),\r\n            }),\r\n            onSubmit: async values => {\r\n                const result = JSON.stringify(values, null, 2);\r\n                await contract.methods.search(values.accid).send({from : account})\r\n                    .on(\"confirmation\" ,(e)=>{\r\n                        window.location.href=\"/doctor\"\r\n                    }).on(\"error\",(err)=>{\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: 'The particular id is not a doctor',\r\n                        })\r\n\r\n                    })\r\n\r\n            },\r\n\r\n        });\r\n        return (\r\n            <Form onSubmit={formik.handleSubmit}>\r\n\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Account Id</label>\r\n                            <Input\r\n                                id=\"accid\"\r\n                                name=\"accid\"\r\n                                type=\"text\"\r\n                                placeholder=\"Search with Hash code\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.accid}\r\n                            />\r\n                            {formik.touched.accid && formik.errors.accid ? (\r\n                                <div>{formik.errors.accid}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Button\r\n                    className=\"btn-round float-right\"\r\n                    color=\"primary\"\r\n                    data-placement=\"right\"\r\n                    id=\"tooltip341148792\"\r\n                    type=\"submit\"\r\n                >\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <IndexNavbar  isadmin={\"true\"}/>\r\n            <div className=\"wrapper\">\r\n\r\n                <section className=\"section\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"card-plain\">\r\n                                    <CardHeader>\r\n                                        <h1 className=\"profile-title text-left\">Doctor</h1>\r\n                                        <h5 className=\"text-on-back\">DR</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <AddDoctorForm />\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\Doctor\\DoctorInfo.js",["207","208","209"],"\r\nimport React, {useState} from \"react\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n   FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport Footer from \"../../../components/Footer/Footer.js\";\r\nimport IndexNavbar from \"../../../components/Navbars/IndexNavbar\";\r\nimport Web3 from \"web3\";\r\nimport Meme from \"../../../abis/Meme.json\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport ipfs from \"../../../utils/ipfs\";\r\n\r\n\r\nlet ps = null;\r\nconst baseURL = \"https://ipfs.infura.io:5001/api/v0/cat?arg=\";\r\n\r\nexport default function DoctorInfo() {\r\n    const [Drinfo, setDrinfo] = useState('');\r\n    const [loadweb3s, setLoadweb3s] = useState('');\r\n    const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\r\n    const [account, setAccount] = useState(null);\r\n    const [contract, setContract] = useState(null);\r\n    const [details,setDetails] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        age: '',\r\n        city: '',\r\n        state: '',\r\n        country: '',\r\n        mobile: '',\r\n        accid: '',\r\n        Speciality: '',\r\n        qualification: '',\r\n        regno:'',\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            document.documentElement.className += \" perfect-scrollbar-on\";\r\n            document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n            let tables = document.querySelectorAll(\".table-responsive\");\r\n            for (let i = 0; i < tables.length; i++) {\r\n                ps = new PerfectScrollbar(tables[i]);\r\n            }\r\n        }\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        if(!loadweb3s) {\r\n            loadWeb3();\r\n        }\r\n        if(!loadBlockchainDates) {\r\n            loadBlockchainDate();\r\n        }\r\n        if(!Drinfo){\r\n            // getDrInfo();\r\n        }\r\n\r\n        return function cleanup() {\r\n\r\n            document.body.classList.toggle(\"profile-page\");\r\n        };\r\n    },[]);\r\n\r\n    const loadBlockchainDate = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Meme.networks[networkId]\r\n        if(networkData){\r\n            const abi = Meme.abi\r\n            const address = networkData.address\r\n            const contract = web3.eth.Contract(abi,address)\r\n            setContract(contract)\r\n            // const memeHash = await contract.methods.get().call()\r\n            // console.log(\"Value\",memeHash)\r\n\r\n            await contract.methods.getDrInfo().call().then(value =>{\r\n                console.log(\"Doctor info hash : \",value)\r\n                axios.get(baseURL+value).then((response) => {\r\n                    setDetails(response.data);\r\n                    console.log(details);\r\n                });\r\n\r\n            })\r\n        }else{\r\n            window.alert(\"Smart contract not deployed to the detected network\")\r\n        }\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.location.reload()\r\n        })\r\n        setLoadBlockchainDates('true');\r\n\r\n    };\r\n\r\n    const loadWeb3 = async () => {\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } if(window.web3){\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n        setLoadweb3s('true');\r\n    };\r\n\r\n    // const getDrInfo = async () => {\r\n    //     console.log(account)\r\n    //     await contract.methods.getDrInfo().call().then(value =>{\r\n    //         console.log(\"Doctor info hash : \",value)\r\n    //         ipfs.cat(value).then(data =>{\r\n    //             console.log(data)\r\n    //             var val = JSON.parse(data)\r\n    //\r\n    //\r\n    //         })\r\n    //     })\r\n    // };\r\n\r\n    const AddDoctorForm = () => {\r\n        const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                firstName: details.firstName,\r\n                lastName: details.lastName,\r\n                email: details.email,\r\n                age: details.age,\r\n                city: details.city,\r\n                state: details.state,\r\n                country: details.country,\r\n                mobile: details.mobile,\r\n                accid: details.accid,\r\n                Speciality: details.Speciality,\r\n                qualification: details.qualification,\r\n                regno:details.regno,\r\n            },\r\n\r\n            validationSchema: Yup.object({\r\n                firstName: Yup.string()\r\n                    .max(15, 'Must be 15 characters or less')\r\n                    .required('Required'),\r\n                lastName: Yup.string()\r\n                    .max(20, 'Must be 20 characters or less')\r\n                    .required('Required'),\r\n                email: Yup.string().email('Invalid email address').required('Required'),\r\n                age: Yup.number()\r\n                    .required('Required')\r\n                    .test(\r\n                        'Is 20+?',\r\n                        'Age must be greater than 20!',\r\n                        (value) => value >= 20\r\n                    ),\r\n                city: Yup.string()\r\n                    .required('Required'),\r\n                state: Yup.string()\r\n                    .required('Required'),\r\n                country: Yup.string()\r\n                    .required('Required'),\r\n                mobile: Yup.string().matches(phoneRegExp, 'Mobile number is not valid'),\r\n                accid: Yup.string()\r\n                    .max(42, 'Must be 20 characters')\r\n                    .min(42, 'Must be 20 characters')\r\n                    .required('Required'),\r\n                Speciality: Yup.string()\r\n                    .required('Required'),\r\n                qualification: Yup.string()\r\n                    .required('Required'),\r\n                regno: Yup.string()\r\n                    .required('Required'),\r\n            }),\r\n            onSubmit: async values => {\r\n                const result = JSON.stringify(values, null, 2);\r\n                await ipfs.add(result).then(\r\n                    hash => {\r\n                        console.log(hash.path)\r\n                        contract.methods.addDrInfo(values.accid,hash.path).send({from: account})\r\n                            .on(\"confirmation\", (r) => {\r\n                                console.log(\"Doctor Added Successfully\")\r\n                                Swal.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Success',\r\n                                    text: 'Doctor Registered Successfully!',\r\n                                })\r\n                                window.location.reload();\r\n                            }).on(\"error\",(er)=>{\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Error',\r\n                                text: '1.Only Admin can Add Users\\n2.This id Already have a role',\r\n                            })\r\n                            window.location.reload();\r\n                        });\r\n                    });\r\n            },\r\n\r\n        });\r\n        return (\r\n            <Form onSubmit={formik.handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>First Name</label>\r\n                            <Input\r\n                                id=\"firstName\"\r\n                                name=\"firstName\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.firstName}\r\n                            />\r\n                            {formik.touched.firstName && formik.errors.firstName ? (\r\n                                <div>{formik.errors.firstName}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Last Name</label>\r\n                            <Input\r\n                                id=\"lastName\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.lastName}\r\n                            />\r\n                            {formik.touched.lastName && formik.errors.lastName ? (\r\n                                <div>{formik.errors.lastName}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Email</label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.email}\r\n                            />\r\n                            {formik.touched.email && formik.errors.email ? (\r\n                                <div>{formik.errors.email}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Age</label>\r\n                            <Input\r\n                                id=\"age\"\r\n                                name=\"age\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.age}\r\n                            />\r\n                            {formik.touched.age && formik.errors.age ? (\r\n                                <div>{formik.errors.age}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Mobile</label>\r\n                            <Input\r\n                                id=\"mobile\"\r\n                                name=\"mobile\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.mobile}\r\n                            />\r\n                            {formik.touched.mobile && formik.errors.mobile ? (\r\n                                <div>{formik.errors.mobile}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"4\">\r\n                        <FormGroup>\r\n                            <label>City</label>\r\n                            <Input\r\n                                id=\"city\"\r\n                                name=\"city\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.city}\r\n                            />\r\n                            {formik.touched.city && formik.errors.city ? (\r\n                                <div>{formik.errors.city}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                        <FormGroup>\r\n                            <label>State</label>\r\n                            <Input\r\n                                id=\"state\"\r\n                                name=\"state\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.state}\r\n                            />\r\n                            {formik.touched.state && formik.errors.state ? (\r\n                                <div>{formik.errors.state}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                        <FormGroup>\r\n                            <label>Country</label>\r\n                            <Input\r\n                                id=\"country\"\r\n                                name=\"country\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.country}\r\n                            />\r\n                            {formik.touched.country && formik.errors.country ? (\r\n                                <div>{formik.errors.country}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Account Id</label>\r\n                            <Input\r\n                                id=\"accid\"\r\n                                name=\"accid\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.accid}\r\n                            />\r\n                            {formik.touched.accid && formik.errors.accid ? (\r\n                                <div>{formik.errors.accid}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Speciality</label>\r\n                            <Input\r\n                                id=\"Speciality\"\r\n                                name=\"Speciality\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.Speciality}\r\n                            />\r\n                            {formik.touched.Speciality && formik.errors.Speciality ? (\r\n                                <div>{formik.errors.Speciality}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Register No</label>\r\n                            <Input\r\n                                id=\"regno\"\r\n                                name=\"regno\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.regno}\r\n                            />\r\n                            {formik.touched.regno && formik.errors.regno ? (\r\n                                <div>{formik.errors.regno}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Qualification</label>\r\n                            <Input\r\n                                id=\"qualification\"\r\n                                name=\"qualification\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.qualification}\r\n                            />\r\n                            {formik.touched.qualification && formik.errors.qualification ? (\r\n                                <div>{formik.errors.qualification}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/*<Button*/}\r\n                {/*    className=\"btn-round float-right\"*/}\r\n                {/*    color=\"primary\"*/}\r\n                {/*    data-placement=\"right\"*/}\r\n                {/*    id=\"tooltip341148792\"*/}\r\n                {/*    type=\"submit\"*/}\r\n                {/*>*/}\r\n                {/*    Add Doctor*/}\r\n                {/*</Button>*/}\r\n            </Form>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <IndexNavbar  isadmin={\"true\"}/>\r\n            <div className=\"wrapper\">\r\n\r\n                <section className=\"section\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"card-plain\">\r\n                                    <CardHeader>\r\n                                        <h1 className=\"profile-title text-left\">{details.firstName + ' ' +details.lastName}</h1>\r\n                                        <h5 className=\"text-on-back\">DR</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <AddDoctorForm />\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md=\"6\" className=\"align-self-center\">\r\n\r\n                                    <Card className=\"card-coin card-plain\">\r\n                                        <CardHeader>\r\n                                            <img\r\n                                                alt=\"...\"\r\n                                                className=\"img-center img-fluid rounded-circle\"\r\n                                                src={require(\"../../../assets/img/mike.jpg\").default}\r\n                                            />\r\n                                            <h4 className=\"title\">Dr. {details.firstName + ' ' +details.lastName + ' ' + details.qualification}</h4>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            {/*<h6 className=\"profile-title text-left\"></h6>*/}\r\n                                            <h6>{details.Speciality}</h6>\r\n\r\n                                        </CardBody>\r\n                                    </Card>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\patient\\AddPatient.js",["210","211","212","213"],"\r\nimport React, {useState} from \"react\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n\r\n} from \"reactstrap\";\r\n\r\nimport Footer from \"../../../components/Footer/Footer.js\";\r\nimport IndexNavbar from \"../../../components/Navbars/IndexNavbar\";\r\nimport Web3 from \"web3\";\r\nimport Meme from \"../../../abis/Meme.json\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport ipfs from \"../../../utils/ipfs\";\r\n\r\n\r\nlet ps = null;\r\n\r\nexport default function AddPatient() {\r\n    const [isAdmin, setIsAdmin] = useState('');\r\n    const [loadweb3s, setLoadweb3s] = useState('');\r\n    const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\r\n    const [account, setAccount] = useState(null);\r\n    const [contract, setContract] = useState(null);\r\n\r\n    React.useEffect(() => {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            document.documentElement.className += \" perfect-scrollbar-on\";\r\n            document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n            let tables = document.querySelectorAll(\".table-responsive\");\r\n            for (let i = 0; i < tables.length; i++) {\r\n                ps = new PerfectScrollbar(tables[i]);\r\n            }\r\n        }\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        if(!loadweb3s) {\r\n            loadWeb3();\r\n        }\r\n        if(!loadBlockchainDates) {\r\n            loadBlockchainDate();\r\n        }\r\n\r\n        return function cleanup() {\r\n\r\n            document.body.classList.toggle(\"profile-page\");\r\n        };\r\n    },[]);\r\n\r\n    const loadBlockchainDate = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Meme.networks[networkId]\r\n        if(networkData){\r\n            const abi = Meme.abi\r\n            const address = networkData.address\r\n            const contract = web3.eth.Contract(abi,address)\r\n            setContract(contract)\r\n            const adminId = await contract.methods.getAdmin().call()\r\n\r\n            if(adminId == accounts[0]){\r\n                setIsAdmin('false')\r\n            }else{\r\n                // Swal.fire({\r\n                //     icon: 'error',\r\n                //     title: 'Oops...',\r\n                //     text: 'Only Admin have access!',\r\n                // }).then((value)=>{\r\n                //     // history.push(\"/home\")\r\n                //     window.location.href=\"/index\";\r\n                // });\r\n            }\r\n        }else{\r\n            window.alert(\"Smart contract not deployed to the detected network\")\r\n        }\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.location.reload()\r\n        })\r\n        setLoadBlockchainDates('true');\r\n\r\n    };\r\n\r\n    const loadWeb3 = async () => {\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } if(window.web3){\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n        setLoadweb3s('true');\r\n    };\r\n\r\n    const AddPatientForm = () => {\r\n        const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                age: '',\r\n                city: '',\r\n                state: '',\r\n                country: '',\r\n                mobile: '',\r\n                accid: '',\r\n            },\r\n\r\n            validationSchema: Yup.object({\r\n                firstName: Yup.string()\r\n                    .max(15, 'Must be 15 characters or less')\r\n                    .required('Required'),\r\n                lastName: Yup.string()\r\n                    .max(20, 'Must be 20 characters or less')\r\n                    .required('Required'),\r\n                email: Yup.string().email('Invalid email address').required('Required'),\r\n                age: Yup.number()\r\n                    .required('Required')\r\n                    .test(\r\n                        'Is 20+?',\r\n                        'Age must be greater than 20!',\r\n                        (value) => value >= 20\r\n                    ),\r\n                city: Yup.string()\r\n                    .required('Required'),\r\n                state: Yup.string()\r\n                    .required('Required'),\r\n                country: Yup.string()\r\n                    .required('Required'),\r\n                mobile: Yup.string().matches(phoneRegExp, 'Mobile number is not valid'),\r\n                accid: Yup.string()\r\n                    .max(42, 'Must be 20 characters')\r\n                    .min(42, 'Must be 20 characters')\r\n                    .required('Required'),\r\n\r\n            }),\r\n            onSubmit: async values => {\r\n                const result = JSON.stringify(values, null, 2);\r\n                await ipfs.add(result).then(\r\n                    hash => {\r\n                        console.log(hash.path)\r\n                        contract.methods.addPatInfo(values.accid,hash.path).send({from: account})\r\n                            .on(\"confirmation\", (r) => {\r\n                                console.log(\"Patient Added Successfully\")\r\n                                Swal.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Success',\r\n                                    text: 'Patient Registered Successfully!',\r\n                                })\r\n                                window.location.reload();\r\n                            }).on(\"error\",(er)=>{\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Error',\r\n                                text: '1.Only Admin can Add Users\\n2.This id Already have a role',\r\n                            })\r\n                            window.location.reload();\r\n                        });\r\n                    });\r\n            },\r\n\r\n        });\r\n        return (\r\n        <Form onSubmit={formik.handleSubmit}>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>First Name</label>\r\n                        <Input\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.firstName}\r\n                        />\r\n                        {formik.touched.firstName && formik.errors.firstName ? (\r\n                            <div>{formik.errors.firstName}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Last Name</label>\r\n                        <Input\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.lastName}\r\n                        />\r\n                        {formik.touched.lastName && formik.errors.lastName ? (\r\n                            <div>{formik.errors.lastName}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <FormGroup>\r\n                        <label>Email</label>\r\n                        <Input\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.email}\r\n                        />\r\n                        {formik.touched.email && formik.errors.email ? (\r\n                            <div>{formik.errors.email}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Age</label>\r\n                        <Input\r\n                            id=\"age\"\r\n                            name=\"age\"\r\n                            type=\"number\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.age}\r\n                        />\r\n                        {formik.touched.age && formik.errors.age ? (\r\n                            <div>{formik.errors.age}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                        <label>Mobile</label>\r\n                        <Input\r\n                            id=\"mobile\"\r\n                            name=\"mobile\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.mobile}\r\n                        />\r\n                        {formik.touched.mobile && formik.errors.mobile ? (\r\n                            <div>{formik.errors.mobile}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"4\">\r\n                    <FormGroup>\r\n                        <label>City</label>\r\n                        <Input\r\n                            id=\"city\"\r\n                            name=\"city\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.city}\r\n                        />\r\n                        {formik.touched.city && formik.errors.city ? (\r\n                            <div>{formik.errors.city}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                    <FormGroup>\r\n                        <label>State</label>\r\n                        <Input\r\n                            id=\"state\"\r\n                            name=\"state\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.state}\r\n                        />\r\n                        {formik.touched.state && formik.errors.state ? (\r\n                            <div>{formik.errors.state}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                    <FormGroup>\r\n                        <label>Country</label>\r\n                        <Input\r\n                            id=\"country\"\r\n                            name=\"country\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.country}\r\n                        />\r\n                        {formik.touched.country && formik.errors.country ? (\r\n                            <div>{formik.errors.country}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    <FormGroup>\r\n                        <label>Account Id</label>\r\n                        <Input\r\n                            id=\"accid\"\r\n                            name=\"accid\"\r\n                            type=\"text\"\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            value={formik.values.accid}\r\n                        />\r\n                        {formik.touched.accid && formik.errors.accid ? (\r\n                            <div>{formik.errors.accid}</div>\r\n                        ) : null}\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Button\r\n                className=\"btn-round float-right\"\r\n                color=\"primary\"\r\n                data-placement=\"right\"\r\n                id=\"tooltip341148792\"\r\n                type=\"submit\"\r\n            >\r\n                Add Patient\r\n            </Button>\r\n        </Form>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <IndexNavbar  isadmin={\"true\"}/>\r\n            <div className=\"wrapper\">\r\n\r\n                <section className=\"section\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"card-plain\">\r\n                                    <CardHeader>\r\n                                        <h1 className=\"profile-title text-left\">Add Patient</h1>\r\n                                        <h5 className=\"text-on-back\">Pt</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <AddPatientForm />\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\patient\\SearchPatient.js",["214","215","216","217","218","219","220"],"\r\nimport React, {useState} from \"react\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n\r\n} from \"reactstrap\";\r\n\r\nimport Footer from \"../../../components/Footer/Footer.js\";\r\nimport IndexNavbar from \"../../../components/Navbars/IndexNavbar\";\r\nimport Web3 from \"web3\";\r\nimport Meme from \"../../../abis/Meme.json\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport ipfs from \"../../../utils/ipfs\";\r\n\r\n\r\nlet ps = null;\r\n\r\nexport default function SearchPatient() {\r\n    const [isAdmin, setIsAdmin] = useState('');\r\n    const [loadweb3s, setLoadweb3s] = useState('');\r\n    const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\r\n    const [account, setAccount] = useState(null);\r\n    const [contract, setContract] = useState(null);\r\n\r\n    React.useEffect(() => {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            document.documentElement.className += \" perfect-scrollbar-on\";\r\n            document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n            let tables = document.querySelectorAll(\".table-responsive\");\r\n            for (let i = 0; i < tables.length; i++) {\r\n                ps = new PerfectScrollbar(tables[i]);\r\n            }\r\n        }\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        if(!loadweb3s) {\r\n            loadWeb3();\r\n        }\r\n        if(!loadBlockchainDates) {\r\n            loadBlockchainDate();\r\n        }\r\n\r\n        return function cleanup() {\r\n\r\n            document.body.classList.toggle(\"profile-page\");\r\n        };\r\n    },[]);\r\n\r\n    const loadBlockchainDate = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Meme.networks[networkId]\r\n        if(networkData){\r\n            const abi = Meme.abi\r\n            const address = networkData.address\r\n            const contract = web3.eth.Contract(abi,address)\r\n            setContract(contract)\r\n            const adminId = await contract.methods.getAdmin().call()\r\n\r\n            if(adminId == accounts[0]){\r\n                setIsAdmin('false')\r\n            }else{\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Only Admin have access!',\r\n                }).then((value)=>{\r\n                    // history.push(\"/home\")\r\n                    window.location.href=\"/index\";\r\n                });\r\n            }\r\n        }else{\r\n            window.alert(\"Smart contract not deployed to the detected network\")\r\n        }\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.location.reload()\r\n        })\r\n        setLoadBlockchainDates('true');\r\n\r\n    };\r\n\r\n    const loadWeb3 = async () => {\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } if(window.web3){\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n        setLoadweb3s('true');\r\n    };\r\n\r\n    const AddDoctorForm = () => {\r\n        const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                accid: '',\r\n            },\r\n\r\n            validationSchema: Yup.object({\r\n                accid: Yup.string()\r\n                    .max(42, 'Must be 20 characters')\r\n                    .min(42, 'Must be 20 characters')\r\n                    .required('Required'),\r\n            }),\r\n            onSubmit: async values => {\r\n                const result = JSON.stringify(values, null, 2);\r\n                await contract.methods.searchPat(values.accid).send({from : account})\r\n                    .on(\"confirmation\" ,(e)=>{\r\n                        window.location.href=\"/patient\"\r\n                    }).on(\"error\",(err)=>{\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Error',\r\n                            text: 'The particular id is not a Patient',\r\n                        })\r\n\r\n                    })\r\n\r\n            },\r\n\r\n        });\r\n        return (\r\n            <Form onSubmit={formik.handleSubmit}>\r\n\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Account Id</label>\r\n                            <Input\r\n                                id=\"accid\"\r\n                                name=\"accid\"\r\n                                type=\"text\"\r\n                                placeholder=\"Search with Hash code\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.accid}\r\n                            />\r\n                            {formik.touched.accid && formik.errors.accid ? (\r\n                                <div>{formik.errors.accid}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Button\r\n                    className=\"btn-round float-right\"\r\n                    color=\"primary\"\r\n                    data-placement=\"right\"\r\n                    id=\"tooltip341148792\"\r\n                    type=\"submit\"\r\n                >\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <IndexNavbar  isadmin={\"true\"}/>\r\n            <div className=\"wrapper\">\r\n\r\n                <section className=\"section\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"card-plain\">\r\n                                    <CardHeader>\r\n                                        <h1 className=\"profile-title text-left\">Doctor</h1>\r\n                                        <h5 className=\"text-on-back\">DR</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <AddDoctorForm />\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","D:\\xampp\\htdocs\\DAPP\\starter_kit-master\\src\\views\\examples\\patient\\PatientInfo.js",["221","222","223"],"\r\nimport React, {useState} from \"react\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n   FormGroup,\r\n    Form,\r\n    Input,\r\n    Container,\r\n    Row,\r\n    Col,\r\n\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport Footer from \"../../../components/Footer/Footer.js\";\r\nimport IndexNavbar from \"../../../components/Navbars/IndexNavbar\";\r\nimport Web3 from \"web3\";\r\nimport Meme from \"../../../abis/Meme.json\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport ipfs from \"../../../utils/ipfs\";\r\n\r\n\r\nlet ps = null;\r\nconst baseURL = \"https://ipfs.infura.io:5001/api/v0/cat?arg=\";\r\n\r\nexport default function PatientInfo() {\r\n    const [Drinfo, setDrinfo] = useState('');\r\n    const [loadweb3s, setLoadweb3s] = useState('');\r\n    const [loadBlockchainDates, setLoadBlockchainDates] = useState('');\r\n    const [account, setAccount] = useState(null);\r\n    const [contract, setContract] = useState(null);\r\n    const [details,setDetails] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        age: '',\r\n        city: '',\r\n        state: '',\r\n        country: '',\r\n        mobile: '',\r\n        accid: '',\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (navigator.platform.indexOf(\"Win\") > -1) {\r\n            document.documentElement.className += \" perfect-scrollbar-on\";\r\n            document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n            let tables = document.querySelectorAll(\".table-responsive\");\r\n            for (let i = 0; i < tables.length; i++) {\r\n                ps = new PerfectScrollbar(tables[i]);\r\n            }\r\n        }\r\n        document.body.classList.toggle(\"profile-page\");\r\n\r\n        if(!loadweb3s) {\r\n            loadWeb3();\r\n        }\r\n        if(!loadBlockchainDates) {\r\n            loadBlockchainDate();\r\n        }\r\n        if(!Drinfo){\r\n            // getDrInfo();\r\n        }\r\n\r\n        return function cleanup() {\r\n\r\n            document.body.classList.toggle(\"profile-page\");\r\n        };\r\n    },[]);\r\n\r\n    const loadBlockchainDate = async () => {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts[0])\r\n        const networkId = await web3.eth.net.getId()\r\n        const networkData = Meme.networks[networkId]\r\n        if(networkData){\r\n            const abi = Meme.abi\r\n            const address = networkData.address\r\n            const contract = web3.eth.Contract(abi,address)\r\n            setContract(contract)\r\n            // const memeHash = await contract.methods.get().call()\r\n            // console.log(\"Value\",memeHash)\r\n\r\n            await contract.methods.getPatInfo().call().then(value =>{\r\n                console.log(value)\r\n                axios.get(baseURL+value).then((response) => {\r\n                    setDetails(response.data);\r\n                    console.log(details);\r\n                });\r\n\r\n            })\r\n        }else{\r\n            window.alert(\"Smart contract not deployed to the detected network\")\r\n        }\r\n        window.ethereum.on('accountsChanged', function (accounts) {\r\n            window.location.reload()\r\n        })\r\n        setLoadBlockchainDates('true');\r\n\r\n    };\r\n\r\n    const loadWeb3 = async () => {\r\n        if(window.ethereum){\r\n            window.web3 = new Web3(window.ethereum)\r\n            await window.ethereum.enable()\r\n        } if(window.web3){\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }else{\r\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n        }\r\n        setLoadweb3s('true');\r\n    };\r\n\r\n\r\n\r\n    const AddDoctorForm = () => {\r\n        const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                firstName: details.firstName,\r\n                lastName: details.lastName,\r\n                email: details.email,\r\n                age: details.age,\r\n                city: details.city,\r\n                state: details.state,\r\n                country: details.country,\r\n                mobile: details.mobile,\r\n                accid: details.accid,\r\n            },\r\n\r\n            validationSchema: Yup.object({\r\n                firstName: Yup.string()\r\n                    .max(15, 'Must be 15 characters or less')\r\n                    .required('Required'),\r\n                lastName: Yup.string()\r\n                    .max(20, 'Must be 20 characters or less')\r\n                    .required('Required'),\r\n                email: Yup.string().email('Invalid email address').required('Required'),\r\n                age: Yup.number()\r\n                    .required('Required')\r\n                    .test(\r\n                        'Is 20+?',\r\n                        'Age must be greater than 20!',\r\n                        (value) => value >= 20\r\n                    ),\r\n                city: Yup.string()\r\n                    .required('Required'),\r\n                state: Yup.string()\r\n                    .required('Required'),\r\n                country: Yup.string()\r\n                    .required('Required'),\r\n                mobile: Yup.string().matches(phoneRegExp, 'Mobile number is not valid'),\r\n                accid: Yup.string()\r\n                    .max(42, 'Must be 20 characters')\r\n                    .min(42, 'Must be 20 characters')\r\n                    .required('Required'),\r\n\r\n            }),\r\n            onSubmit: async values => {\r\n                const result = JSON.stringify(values, null, 2);\r\n                await ipfs.add(result).then(\r\n                    hash => {\r\n                        console.log(hash.path)\r\n                        contract.methods.addDrInfo(values.accid,hash.path).send({from: account})\r\n                            .on(\"confirmation\", (r) => {\r\n                                console.log(\"Doctor Added Successfully\")\r\n                                Swal.fire({\r\n                                    icon: 'success',\r\n                                    title: 'Success',\r\n                                    text: 'Doctor Registered Successfully!',\r\n                                })\r\n                                window.location.reload();\r\n                            }).on(\"error\",(er)=>{\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Error',\r\n                                text: '1.Only Admin can Add Users\\n2.This id Already have a role',\r\n                            })\r\n                            window.location.reload();\r\n                        });\r\n                    });\r\n            },\r\n\r\n        });\r\n        return (\r\n            <Form onSubmit={formik.handleSubmit}>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>First Name</label>\r\n                            <Input\r\n                                id=\"firstName\"\r\n                                name=\"firstName\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.firstName}\r\n                            />\r\n                            {formik.touched.firstName && formik.errors.firstName ? (\r\n                                <div>{formik.errors.firstName}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Last Name</label>\r\n                            <Input\r\n                                id=\"lastName\"\r\n                                name=\"lastName\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.lastName}\r\n                            />\r\n                            {formik.touched.lastName && formik.errors.lastName ? (\r\n                                <div>{formik.errors.lastName}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Email</label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.email}\r\n                            />\r\n                            {formik.touched.email && formik.errors.email ? (\r\n                                <div>{formik.errors.email}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Age</label>\r\n                            <Input\r\n                                id=\"age\"\r\n                                name=\"age\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.age}\r\n                            />\r\n                            {formik.touched.age && formik.errors.age ? (\r\n                                <div>{formik.errors.age}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                        <FormGroup>\r\n                            <label>Mobile</label>\r\n                            <Input\r\n                                id=\"mobile\"\r\n                                name=\"mobile\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.mobile}\r\n                            />\r\n                            {formik.touched.mobile && formik.errors.mobile ? (\r\n                                <div>{formik.errors.mobile}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"4\">\r\n                        <FormGroup>\r\n                            <label>City</label>\r\n                            <Input\r\n                                id=\"city\"\r\n                                name=\"city\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.city}\r\n                            />\r\n                            {formik.touched.city && formik.errors.city ? (\r\n                                <div>{formik.errors.city}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                        <FormGroup>\r\n                            <label>State</label>\r\n                            <Input\r\n                                id=\"state\"\r\n                                name=\"state\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.state}\r\n                            />\r\n                            {formik.touched.state && formik.errors.state ? (\r\n                                <div>{formik.errors.state}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                        <FormGroup>\r\n                            <label>Country</label>\r\n                            <Input\r\n                                id=\"country\"\r\n                                name=\"country\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.country}\r\n                            />\r\n                            {formik.touched.country && formik.errors.country ? (\r\n                                <div>{formik.errors.country}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md=\"12\">\r\n                        <FormGroup>\r\n                            <label>Account Id</label>\r\n                            <Input\r\n                                id=\"accid\"\r\n                                name=\"accid\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.accid}\r\n                            />\r\n                            {formik.touched.accid && formik.errors.accid ? (\r\n                                <div>{formik.errors.accid}</div>\r\n                            ) : null}\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                {/*<Button*/}\r\n                {/*    className=\"btn-round float-right\"*/}\r\n                {/*    color=\"primary\"*/}\r\n                {/*    data-placement=\"right\"*/}\r\n                {/*    id=\"tooltip341148792\"*/}\r\n                {/*    type=\"submit\"*/}\r\n                {/*>*/}\r\n                {/*    Add Doctor*/}\r\n                {/*</Button>*/}\r\n            </Form>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n            <IndexNavbar  isadmin={\"true\"}/>\r\n            <div className=\"wrapper\">\r\n\r\n                <section className=\"section\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <Card className=\"card-plain\">\r\n                                    <CardHeader>\r\n                                        <h1 className=\"profile-title text-left\">{details.firstName + ' ' +details.lastName}</h1>\r\n                                        <h5 className=\"text-on-back\">Pt</h5>\r\n                                    </CardHeader>\r\n                                    <CardBody>\r\n                                        <AddDoctorForm />\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md=\"6\" className=\"align-self-center\">\r\n\r\n                                    <Card className=\"card-coin card-plain\">\r\n                                        <CardHeader>\r\n                                            <img\r\n                                                alt=\"...\"\r\n                                                className=\"img-center img-fluid rounded-circle\"\r\n                                                src={require(\"../../../assets/img/mike.jpg\").default}\r\n                                            />\r\n                                            <h4 className=\"title\">{details.firstName + ' ' +details.lastName }</h4>\r\n                                        </CardHeader>\r\n                                        <CardBody>\r\n                                            {/*<h6 className=\"profile-title text-left\"></h6>*/}\r\n                                            {/*<h6>{details.Speciality}</h6>*/}\r\n\r\n                                        </CardBody>\r\n                                    </Card>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n",{"ruleId":"224","severity":1,"message":"225","line":21,"column":8,"nodeType":"226","messageId":"227","endLine":21,"endColumn":19},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"224","severity":1,"message":"232","line":6,"column":7,"nodeType":"226","messageId":"227","endLine":6,"endColumn":10},{"ruleId":"233","severity":1,"message":"234","line":107,"column":19,"nodeType":"235","endLine":107,"endColumn":120},{"ruleId":"224","severity":1,"message":"236","line":22,"column":8,"nodeType":"226","messageId":"227","endLine":22,"endColumn":12},{"ruleId":"224","severity":1,"message":"237","line":25,"column":21,"nodeType":"226","messageId":"227","endLine":25,"endColumn":33},{"ruleId":"224","severity":1,"message":"238","line":26,"column":31,"nodeType":"226","messageId":"227","endLine":26,"endColumn":53},{"ruleId":"224","severity":1,"message":"239","line":27,"column":10,"nodeType":"226","messageId":"227","endLine":27,"endColumn":17},{"ruleId":"240","severity":1,"message":"241","line":36,"column":5,"nodeType":"242","messageId":"243","endLine":41,"endColumn":6},{"ruleId":"244","severity":1,"message":"245","line":42,"column":5,"nodeType":"246","endLine":42,"endColumn":7,"suggestions":"247"},{"ruleId":"228","replacedBy":"248"},{"ruleId":"230","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":31,"column":18,"nodeType":"252","messageId":"253","endLine":31,"endColumn":20},{"ruleId":"244","severity":1,"message":"254","line":39,"column":5,"nodeType":"246","endLine":39,"endColumn":7,"suggestions":"255"},{"ruleId":"224","severity":1,"message":"256","line":63,"column":9,"nodeType":"226","messageId":"227","endLine":63,"endColumn":25},{"ruleId":"224","severity":1,"message":"257","line":26,"column":8,"nodeType":"226","messageId":"227","endLine":26,"endColumn":22},{"ruleId":"224","severity":1,"message":"258","line":5,"column":3,"nodeType":"226","messageId":"227","endLine":5,"endColumn":9},{"ruleId":"224","severity":1,"message":"259","line":9,"column":3,"nodeType":"226","messageId":"227","endLine":9,"endColumn":8},{"ruleId":"224","severity":1,"message":"260","line":10,"column":3,"nodeType":"226","messageId":"227","endLine":10,"endColumn":12},{"ruleId":"224","severity":1,"message":"261","line":11,"column":3,"nodeType":"226","messageId":"227","endLine":11,"endColumn":7},{"ruleId":"224","severity":1,"message":"262","line":12,"column":3,"nodeType":"226","messageId":"227","endLine":12,"endColumn":8},{"ruleId":"224","severity":1,"message":"263","line":13,"column":3,"nodeType":"226","messageId":"227","endLine":13,"endColumn":11},{"ruleId":"224","severity":1,"message":"264","line":14,"column":3,"nodeType":"226","messageId":"227","endLine":14,"endColumn":10},{"ruleId":"224","severity":1,"message":"265","line":15,"column":3,"nodeType":"226","messageId":"227","endLine":15,"endColumn":10},{"ruleId":"224","severity":1,"message":"266","line":16,"column":3,"nodeType":"226","messageId":"227","endLine":16,"endColumn":6},{"ruleId":"224","severity":1,"message":"267","line":17,"column":3,"nodeType":"226","messageId":"227","endLine":17,"endColumn":8},{"ruleId":"224","severity":1,"message":"268","line":18,"column":3,"nodeType":"226","messageId":"227","endLine":18,"endColumn":13},{"ruleId":"224","severity":1,"message":"269","line":19,"column":3,"nodeType":"226","messageId":"227","endLine":19,"endColumn":10},{"ruleId":"224","severity":1,"message":"270","line":23,"column":3,"nodeType":"226","messageId":"227","endLine":23,"endColumn":22},{"ruleId":"224","severity":1,"message":"271","line":24,"column":3,"nodeType":"226","messageId":"227","endLine":24,"endColumn":23},{"ruleId":"224","severity":1,"message":"272","line":33,"column":7,"nodeType":"226","messageId":"227","endLine":33,"endColumn":20},{"ruleId":"224","severity":1,"message":"273","line":54,"column":10,"nodeType":"226","messageId":"227","endLine":54,"endColumn":14},{"ruleId":"224","severity":1,"message":"274","line":54,"column":16,"nodeType":"226","messageId":"227","endLine":54,"endColumn":23},{"ruleId":"224","severity":1,"message":"237","line":55,"column":21,"nodeType":"226","messageId":"227","endLine":55,"endColumn":33},{"ruleId":"224","severity":1,"message":"238","line":56,"column":31,"nodeType":"226","messageId":"227","endLine":56,"endColumn":53},{"ruleId":"244","severity":1,"message":"245","line":89,"column":5,"nodeType":"246","endLine":89,"endColumn":7,"suggestions":"275"},{"ruleId":"224","severity":1,"message":"257","line":21,"column":8,"nodeType":"226","messageId":"227","endLine":21,"endColumn":22},{"ruleId":"224","severity":1,"message":"258","line":5,"column":5,"nodeType":"226","messageId":"227","endLine":5,"endColumn":11},{"ruleId":"224","severity":1,"message":"260","line":9,"column":5,"nodeType":"226","messageId":"227","endLine":9,"endColumn":14},{"ruleId":"224","severity":1,"message":"261","line":10,"column":5,"nodeType":"226","messageId":"227","endLine":10,"endColumn":9},{"ruleId":"224","severity":1,"message":"262","line":11,"column":5,"nodeType":"226","messageId":"227","endLine":11,"endColumn":10},{"ruleId":"224","severity":1,"message":"270","line":15,"column":5,"nodeType":"226","messageId":"227","endLine":15,"endColumn":24},{"ruleId":"224","severity":1,"message":"236","line":23,"column":8,"nodeType":"226","messageId":"227","endLine":23,"endColumn":12},{"ruleId":"224","severity":1,"message":"276","line":24,"column":8,"nodeType":"226","messageId":"227","endLine":24,"endColumn":12},{"ruleId":"224","severity":1,"message":"277","line":25,"column":8,"nodeType":"226","messageId":"227","endLine":25,"endColumn":15},{"ruleId":"224","severity":1,"message":"278","line":28,"column":5,"nodeType":"226","messageId":"227","endLine":28,"endColumn":7},{"ruleId":"224","severity":1,"message":"279","line":31,"column":12,"nodeType":"226","messageId":"227","endLine":31,"endColumn":19},{"ruleId":"224","severity":1,"message":"280","line":35,"column":12,"nodeType":"226","messageId":"227","endLine":35,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":59,"column":7,"nodeType":"246","endLine":59,"endColumn":9,"suggestions":"281"},{"ruleId":"250","severity":1,"message":"251","line":74,"column":24,"nodeType":"252","messageId":"253","endLine":74,"endColumn":26},{"ruleId":"224","severity":1,"message":"278","line":28,"column":5,"nodeType":"226","messageId":"227","endLine":28,"endColumn":7},{"ruleId":"224","severity":1,"message":"279","line":31,"column":12,"nodeType":"226","messageId":"227","endLine":31,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":59,"column":7,"nodeType":"246","endLine":59,"endColumn":9,"suggestions":"282"},{"ruleId":"250","severity":1,"message":"251","line":74,"column":24,"nodeType":"252","messageId":"253","endLine":74,"endColumn":26},{"ruleId":"224","severity":1,"message":"236","line":25,"column":8,"nodeType":"226","messageId":"227","endLine":25,"endColumn":12},{"ruleId":"224","severity":1,"message":"278","line":28,"column":5,"nodeType":"226","messageId":"227","endLine":28,"endColumn":7},{"ruleId":"224","severity":1,"message":"279","line":31,"column":12,"nodeType":"226","messageId":"227","endLine":31,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":59,"column":7,"nodeType":"246","endLine":59,"endColumn":9,"suggestions":"283"},{"ruleId":"250","severity":1,"message":"251","line":74,"column":24,"nodeType":"252","messageId":"253","endLine":74,"endColumn":26},{"ruleId":"224","severity":1,"message":"284","line":109,"column":15,"nodeType":"226","messageId":"227","endLine":109,"endColumn":26},{"ruleId":"224","severity":1,"message":"285","line":122,"column":23,"nodeType":"226","messageId":"227","endLine":122,"endColumn":29},{"ruleId":"224","severity":1,"message":"278","line":28,"column":5,"nodeType":"226","messageId":"227","endLine":28,"endColumn":7},{"ruleId":"224","severity":1,"message":"286","line":32,"column":20,"nodeType":"226","messageId":"227","endLine":32,"endColumn":29},{"ruleId":"244","severity":1,"message":"287","line":77,"column":7,"nodeType":"246","endLine":77,"endColumn":9,"suggestions":"288"},{"ruleId":"224","severity":1,"message":"278","line":28,"column":5,"nodeType":"226","messageId":"227","endLine":28,"endColumn":7},{"ruleId":"224","severity":1,"message":"279","line":31,"column":12,"nodeType":"226","messageId":"227","endLine":31,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":59,"column":7,"nodeType":"246","endLine":59,"endColumn":9,"suggestions":"289"},{"ruleId":"250","severity":1,"message":"251","line":74,"column":24,"nodeType":"252","messageId":"253","endLine":74,"endColumn":26},{"ruleId":"224","severity":1,"message":"236","line":25,"column":8,"nodeType":"226","messageId":"227","endLine":25,"endColumn":12},{"ruleId":"224","severity":1,"message":"278","line":28,"column":5,"nodeType":"226","messageId":"227","endLine":28,"endColumn":7},{"ruleId":"224","severity":1,"message":"279","line":31,"column":12,"nodeType":"226","messageId":"227","endLine":31,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":59,"column":7,"nodeType":"246","endLine":59,"endColumn":9,"suggestions":"290"},{"ruleId":"250","severity":1,"message":"251","line":74,"column":24,"nodeType":"252","messageId":"253","endLine":74,"endColumn":26},{"ruleId":"224","severity":1,"message":"284","line":109,"column":15,"nodeType":"226","messageId":"227","endLine":109,"endColumn":26},{"ruleId":"224","severity":1,"message":"285","line":122,"column":23,"nodeType":"226","messageId":"227","endLine":122,"endColumn":29},{"ruleId":"224","severity":1,"message":"278","line":28,"column":5,"nodeType":"226","messageId":"227","endLine":28,"endColumn":7},{"ruleId":"224","severity":1,"message":"286","line":32,"column":20,"nodeType":"226","messageId":"227","endLine":32,"endColumn":29},{"ruleId":"244","severity":1,"message":"287","line":74,"column":7,"nodeType":"246","endLine":74,"endColumn":9,"suggestions":"291"},"no-unused-vars","'LandingPage' is defined but never used.","Identifier","unusedVar","no-native-reassign",["292"],"no-negated-in-lhs",["293"],"'CID' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ipfs' is defined but never used.","'setLoadweb3s' is assigned a value but never used.","'setLoadBlockchainDates' is assigned a value but never used.","'account' is assigned a value but never used.","no-unreachable","Unreachable code.","IfStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'loadBlockchainDates' and 'loadweb3s'. Either include them or remove the dependency array.","ArrayExpression",["294"],["292"],["293"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has missing dependencies: 'isAdmin' and 'isadmin'. Either include them or remove the dependency array.",["295"],"'scrollToDownload' is assigned a value but never used.","'ExamplesNavbar' is defined but never used.","'Button' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'FormText' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Nav' is defined but never used.","'Table' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'UncontrolledCarousel' is defined but never used.","'carouselItems' is assigned a value but never used.","'tabs' is assigned a value but never used.","'setTabs' is assigned a value but never used.",["296"],"'Swal' is defined but never used.","'histroy' is defined but never used.","'ps' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'contract' is assigned a value but never used.",["297"],["298"],["299"],"'phoneRegExp' is assigned a value but never used.","'result' is assigned a value but never used.","'setDrinfo' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'Drinfo', 'loadBlockchainDate', 'loadBlockchainDates', and 'loadweb3s'. Either include them or remove the dependency array.",["300"],["301"],["302"],["303"],"no-global-assign","no-unsafe-negation",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"304","fix":"308"},{"desc":"304","fix":"309"},{"desc":"304","fix":"310"},{"desc":"304","fix":"311"},{"desc":"312","fix":"313"},{"desc":"304","fix":"314"},{"desc":"304","fix":"315"},{"desc":"312","fix":"316"},"Update the dependencies array to be: [loadBlockchainDates, loadweb3s]",{"range":"317","text":"318"},"Update the dependencies array to be: [isAdmin, isadmin]",{"range":"319","text":"320"},{"range":"321","text":"318"},{"range":"322","text":"318"},{"range":"323","text":"318"},{"range":"324","text":"318"},"Update the dependencies array to be: [Drinfo, loadBlockchainDate, loadBlockchainDates, loadweb3s]",{"range":"325","text":"326"},{"range":"327","text":"318"},{"range":"328","text":"318"},{"range":"329","text":"326"},[990,992],"[loadBlockchainDates, loadweb3s]",[855,857],"[isAdmin, isadmin]",[2379,2381],[1720,1722],[1715,1717],[1718,1720],[2167,2169],"[Drinfo, loadBlockchainDate, loadBlockchainDates, loadweb3s]",[1716,1718],[1719,1721],[2096,2098]]